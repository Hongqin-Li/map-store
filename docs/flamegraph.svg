<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="902" onload="init(evt)" viewBox="0 0 1200 902" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="902" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="885.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="885.00"> </text><svg id="frames" x="10" width="1180"><g><title>[[stack]] (2 samples, 0.01%)</title><rect x="0.0000%" y="821" width="0.0130%" height="15" fill="rgb(227,0,7)"/><text x="0.2500%" y="831.50"></text></g><g><title>__libc_read (2 samples, 0.01%)</title><rect x="0.0000%" y="805" width="0.0130%" height="15" fill="rgb(217,0,24)"/><text x="0.2500%" y="815.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="0.0000%" y="789" width="0.0130%" height="15" fill="rgb(221,193,54)"/><text x="0.2500%" y="799.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="0.0519%" y="805" width="0.0130%" height="15" fill="rgb(248,212,6)"/><text x="0.3019%" y="815.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="0.0519%" y="789" width="0.0130%" height="15" fill="rgb(208,68,35)"/><text x="0.3019%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (2 samples, 0.01%)</title><rect x="0.0714%" y="805" width="0.0130%" height="15" fill="rgb(232,128,0)"/><text x="0.3214%" y="815.50"></text></g><g><title>[unknown] (12 samples, 0.08%)</title><rect x="0.0130%" y="821" width="0.0779%" height="15" fill="rgb(207,160,47)"/><text x="0.2630%" y="831.50"></text></g><g><title>&lt;tempfile::dir::TempDir as core::ops::drop::Drop&gt;::drop (223 samples, 1.45%)</title><rect x="5.5419%" y="629" width="1.4471%" height="15" fill="rgb(228,23,34)"/><text x="5.7919%" y="639.50"></text></g><g><title>std::sys_common::fs::remove_dir_all_recursive (223 samples, 1.45%)</title><rect x="5.5419%" y="613" width="1.4471%" height="15" fill="rgb(218,30,26)"/><text x="5.7919%" y="623.50"></text></g><g><title>std::fs::remove_file (221 samples, 1.43%)</title><rect x="5.5548%" y="597" width="1.4341%" height="15" fill="rgb(220,122,19)"/><text x="5.8048%" y="607.50"></text></g><g><title>std::sys::unix::fs::unlink (221 samples, 1.43%)</title><rect x="5.5548%" y="581" width="1.4341%" height="15" fill="rgb(250,228,42)"/><text x="5.8048%" y="591.50"></text></g><g><title>__unlink (221 samples, 1.43%)</title><rect x="5.5548%" y="565" width="1.4341%" height="15" fill="rgb(240,193,28)"/><text x="5.8048%" y="575.50"></text></g><g><title>[unknown] (221 samples, 1.43%)</title><rect x="5.5548%" y="549" width="1.4341%" height="15" fill="rgb(216,20,37)"/><text x="5.8048%" y="559.50"></text></g><g><title>[unknown] (221 samples, 1.43%)</title><rect x="5.5548%" y="533" width="1.4341%" height="15" fill="rgb(206,188,39)"/><text x="5.8048%" y="543.50"></text></g><g><title>[unknown] (221 samples, 1.43%)</title><rect x="5.5548%" y="517" width="1.4341%" height="15" fill="rgb(217,207,13)"/><text x="5.8048%" y="527.50"></text></g><g><title>[unknown] (221 samples, 1.43%)</title><rect x="5.5548%" y="501" width="1.4341%" height="15" fill="rgb(231,73,38)"/><text x="5.8048%" y="511.50"></text></g><g><title>[unknown] (221 samples, 1.43%)</title><rect x="5.5548%" y="485" width="1.4341%" height="15" fill="rgb(225,20,46)"/><text x="5.8048%" y="495.50"></text></g><g><title>[unknown] (221 samples, 1.43%)</title><rect x="5.5548%" y="469" width="1.4341%" height="15" fill="rgb(210,31,41)"/><text x="5.8048%" y="479.50"></text></g><g><title>[unknown] (221 samples, 1.43%)</title><rect x="5.5548%" y="453" width="1.4341%" height="15" fill="rgb(221,200,47)"/><text x="5.8048%" y="463.50"></text></g><g><title>[unknown] (220 samples, 1.43%)</title><rect x="5.5613%" y="437" width="1.4276%" height="15" fill="rgb(226,26,5)"/><text x="5.8113%" y="447.50"></text></g><g><title>[unknown] (220 samples, 1.43%)</title><rect x="5.5613%" y="421" width="1.4276%" height="15" fill="rgb(249,33,26)"/><text x="5.8113%" y="431.50"></text></g><g><title>[unknown] (214 samples, 1.39%)</title><rect x="5.6003%" y="405" width="1.3887%" height="15" fill="rgb(235,183,28)"/><text x="5.8503%" y="415.50"></text></g><g><title>[unknown] (210 samples, 1.36%)</title><rect x="5.6262%" y="389" width="1.3628%" height="15" fill="rgb(221,5,38)"/><text x="5.8762%" y="399.50"></text></g><g><title>[unknown] (122 samples, 0.79%)</title><rect x="6.1973%" y="373" width="0.7917%" height="15" fill="rgb(247,18,42)"/><text x="6.4473%" y="383.50"></text></g><g><title>[unknown] (80 samples, 0.52%)</title><rect x="6.4698%" y="357" width="0.5191%" height="15" fill="rgb(241,131,45)"/><text x="6.7198%" y="367.50"></text></g><g><title>[unknown] (71 samples, 0.46%)</title><rect x="6.5282%" y="341" width="0.4607%" height="15" fill="rgb(249,31,29)"/><text x="6.7782%" y="351.50"></text></g><g><title>[unknown] (51 samples, 0.33%)</title><rect x="6.6580%" y="325" width="0.3310%" height="15" fill="rgb(225,111,53)"/><text x="6.9080%" y="335.50"></text></g><g><title>[unknown] (45 samples, 0.29%)</title><rect x="6.6970%" y="309" width="0.2920%" height="15" fill="rgb(238,160,17)"/><text x="6.9470%" y="319.50"></text></g><g><title>[unknown] (34 samples, 0.22%)</title><rect x="6.7683%" y="293" width="0.2206%" height="15" fill="rgb(214,148,48)"/><text x="7.0183%" y="303.50"></text></g><g><title>[unknown] (26 samples, 0.17%)</title><rect x="6.8202%" y="277" width="0.1687%" height="15" fill="rgb(232,36,49)"/><text x="7.0702%" y="287.50"></text></g><g><title>[unknown] (8 samples, 0.05%)</title><rect x="6.9371%" y="261" width="0.0519%" height="15" fill="rgb(209,103,24)"/><text x="7.1871%" y="271.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="6.9565%" y="245" width="0.0324%" height="15" fill="rgb(229,88,8)"/><text x="7.2065%" y="255.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="6.9565%" y="229" width="0.0324%" height="15" fill="rgb(213,181,19)"/><text x="7.2065%" y="239.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="6.9695%" y="213" width="0.0195%" height="15" fill="rgb(254,191,54)"/><text x="7.2195%" y="223.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="6.9695%" y="197" width="0.0195%" height="15" fill="rgb(241,83,37)"/><text x="7.2195%" y="207.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="6.9760%" y="181" width="0.0130%" height="15" fill="rgb(233,36,39)"/><text x="7.2260%" y="191.50"></text></g><g><title>[unknown] (8 samples, 0.05%)</title><rect x="6.9890%" y="629" width="0.0519%" height="15" fill="rgb(226,3,54)"/><text x="7.2390%" y="639.50"></text></g><g><title>[unknown] (8 samples, 0.05%)</title><rect x="6.9890%" y="613" width="0.0519%" height="15" fill="rgb(245,192,40)"/><text x="7.2390%" y="623.50"></text></g><g><title>[unknown] (8 samples, 0.05%)</title><rect x="6.9890%" y="597" width="0.0519%" height="15" fill="rgb(238,167,29)"/><text x="7.2390%" y="607.50"></text></g><g><title>[unknown] (8 samples, 0.05%)</title><rect x="6.9890%" y="581" width="0.0519%" height="15" fill="rgb(232,182,51)"/><text x="7.2390%" y="591.50"></text></g><g><title>[unknown] (8 samples, 0.05%)</title><rect x="6.9890%" y="565" width="0.0519%" height="15" fill="rgb(231,60,39)"/><text x="7.2390%" y="575.50"></text></g><g><title>[unknown] (8 samples, 0.05%)</title><rect x="6.9890%" y="549" width="0.0519%" height="15" fill="rgb(208,69,12)"/><text x="7.2390%" y="559.50"></text></g><g><title>[unknown] (8 samples, 0.05%)</title><rect x="6.9890%" y="533" width="0.0519%" height="15" fill="rgb(235,93,37)"/><text x="7.2390%" y="543.50"></text></g><g><title>[unknown] (7 samples, 0.05%)</title><rect x="6.9955%" y="517" width="0.0454%" height="15" fill="rgb(213,116,39)"/><text x="7.2455%" y="527.50"></text></g><g><title>[unknown] (4 samples, 0.03%)</title><rect x="7.0149%" y="501" width="0.0260%" height="15" fill="rgb(222,207,29)"/><text x="7.2649%" y="511.50"></text></g><g><title>[unknown] (4 samples, 0.03%)</title><rect x="7.0149%" y="485" width="0.0260%" height="15" fill="rgb(206,96,30)"/><text x="7.2649%" y="495.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="7.0214%" y="469" width="0.0195%" height="15" fill="rgb(218,138,4)"/><text x="7.2714%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="7.0279%" y="453" width="0.0130%" height="15" fill="rgb(250,191,14)"/><text x="7.2779%" y="463.50"></text></g><g><title>__GI___libc_free (162 samples, 1.05%)</title><rect x="7.0409%" y="629" width="1.0513%" height="15" fill="rgb(239,60,40)"/><text x="7.2909%" y="639.50"></text></g><g><title>[unknown] (4 samples, 0.03%)</title><rect x="10.3180%" y="597" width="0.0260%" height="15" fill="rgb(206,27,48)"/><text x="10.5680%" y="607.50"></text></g><g><title>[unknown] (4 samples, 0.03%)</title><rect x="10.3180%" y="581" width="0.0260%" height="15" fill="rgb(225,35,8)"/><text x="10.5680%" y="591.50"></text></g><g><title>[unknown] (4 samples, 0.03%)</title><rect x="10.3180%" y="565" width="0.0260%" height="15" fill="rgb(250,213,24)"/><text x="10.5680%" y="575.50"></text></g><g><title>[unknown] (4 samples, 0.03%)</title><rect x="10.3180%" y="549" width="0.0260%" height="15" fill="rgb(247,123,22)"/><text x="10.5680%" y="559.50"></text></g><g><title>[unknown] (4 samples, 0.03%)</title><rect x="10.3180%" y="533" width="0.0260%" height="15" fill="rgb(231,138,38)"/><text x="10.5680%" y="543.50"></text></g><g><title>[unknown] (4 samples, 0.03%)</title><rect x="10.3180%" y="517" width="0.0260%" height="15" fill="rgb(231,145,46)"/><text x="10.5680%" y="527.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="10.3245%" y="501" width="0.0195%" height="15" fill="rgb(251,118,11)"/><text x="10.5745%" y="511.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="10.3245%" y="485" width="0.0195%" height="15" fill="rgb(217,147,25)"/><text x="10.5745%" y="495.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="10.3245%" y="469" width="0.0195%" height="15" fill="rgb(247,81,37)"/><text x="10.5745%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="10.3310%" y="453" width="0.0130%" height="15" fill="rgb(209,12,38)"/><text x="10.5810%" y="463.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="10.3310%" y="437" width="0.0130%" height="15" fill="rgb(227,1,9)"/><text x="10.5810%" y="447.50"></text></g><g><title>alloc_perturb (5 samples, 0.03%)</title><rect x="10.3439%" y="597" width="0.0324%" height="15" fill="rgb(248,47,43)"/><text x="10.5939%" y="607.50"></text></g><g><title>checked_request2size (11 samples, 0.07%)</title><rect x="10.3764%" y="597" width="0.0714%" height="15" fill="rgb(221,10,30)"/><text x="10.6264%" y="607.50"></text></g><g><title>malloc_consolidate (2 samples, 0.01%)</title><rect x="10.4478%" y="597" width="0.0130%" height="15" fill="rgb(210,229,1)"/><text x="10.6978%" y="607.50"></text></g><g><title>_int_malloc (316 samples, 2.05%)</title><rect x="8.4426%" y="613" width="2.0506%" height="15" fill="rgb(222,148,37)"/><text x="8.6926%" y="623.50">_..</text></g><g><title>unlink_chunk (5 samples, 0.03%)</title><rect x="10.4607%" y="597" width="0.0324%" height="15" fill="rgb(234,67,33)"/><text x="10.7107%" y="607.50"></text></g><g><title>__GI___libc_malloc (374 samples, 2.43%)</title><rect x="8.0921%" y="629" width="2.4270%" height="15" fill="rgb(247,98,35)"/><text x="8.3421%" y="639.50">__..</text></g><g><title>checked_request2size (4 samples, 0.03%)</title><rect x="10.4932%" y="613" width="0.0260%" height="15" fill="rgb(247,138,52)"/><text x="10.7432%" y="623.50"></text></g><g><title>__memcmp_avx2_movbe (132 samples, 0.86%)</title><rect x="10.5256%" y="629" width="0.8566%" height="15" fill="rgb(213,79,30)"/><text x="10.7756%" y="639.50"></text></g><g><title>__memcpy_avx_unaligned (61 samples, 0.40%)</title><rect x="11.3822%" y="629" width="0.3958%" height="15" fill="rgb(246,177,23)"/><text x="11.6322%" y="639.50"></text></g><g><title>__rdl_alloc (10 samples, 0.06%)</title><rect x="11.7781%" y="629" width="0.0649%" height="15" fill="rgb(230,62,27)"/><text x="12.0281%" y="639.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.01%)</title><rect x="11.8300%" y="613" width="0.0130%" height="15" fill="rgb(216,154,8)"/><text x="12.0800%" y="623.50"></text></g><g><title>__rust_alloc (14 samples, 0.09%)</title><rect x="11.8430%" y="629" width="0.0909%" height="15" fill="rgb(244,35,45)"/><text x="12.0930%" y="639.50"></text></g><g><title>__rust_dealloc (4 samples, 0.03%)</title><rect x="11.9338%" y="629" width="0.0260%" height="15" fill="rgb(251,115,12)"/><text x="12.1838%" y="639.50"></text></g><g><title>[unknown] (6 samples, 0.04%)</title><rect x="13.2382%" y="613" width="0.0389%" height="15" fill="rgb(240,54,50)"/><text x="13.4882%" y="623.50"></text></g><g><title>[unknown] (6 samples, 0.04%)</title><rect x="13.2382%" y="597" width="0.0389%" height="15" fill="rgb(233,84,52)"/><text x="13.4882%" y="607.50"></text></g><g><title>[unknown] (6 samples, 0.04%)</title><rect x="13.2382%" y="581" width="0.0389%" height="15" fill="rgb(207,117,47)"/><text x="13.4882%" y="591.50"></text></g><g><title>[unknown] (6 samples, 0.04%)</title><rect x="13.2382%" y="565" width="0.0389%" height="15" fill="rgb(249,43,39)"/><text x="13.4882%" y="575.50"></text></g><g><title>[unknown] (6 samples, 0.04%)</title><rect x="13.2382%" y="549" width="0.0389%" height="15" fill="rgb(209,38,44)"/><text x="13.4882%" y="559.50"></text></g><g><title>[unknown] (6 samples, 0.04%)</title><rect x="13.2382%" y="533" width="0.0389%" height="15" fill="rgb(236,212,23)"/><text x="13.4882%" y="543.50"></text></g><g><title>[unknown] (6 samples, 0.04%)</title><rect x="13.2382%" y="517" width="0.0389%" height="15" fill="rgb(242,79,21)"/><text x="13.4882%" y="527.50"></text></g><g><title>[unknown] (6 samples, 0.04%)</title><rect x="13.2382%" y="501" width="0.0389%" height="15" fill="rgb(211,96,35)"/><text x="13.4882%" y="511.50"></text></g><g><title>[unknown] (4 samples, 0.03%)</title><rect x="13.2511%" y="485" width="0.0260%" height="15" fill="rgb(253,215,40)"/><text x="13.5011%" y="495.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="13.2576%" y="469" width="0.0195%" height="15" fill="rgb(211,81,21)"/><text x="13.5076%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="13.2641%" y="453" width="0.0130%" height="15" fill="rgb(208,190,38)"/><text x="13.5141%" y="463.50"></text></g><g><title>free_perturb (7 samples, 0.05%)</title><rect x="13.2771%" y="613" width="0.0454%" height="15" fill="rgb(235,213,38)"/><text x="13.5271%" y="623.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="17.7093%" y="597" width="0.0324%" height="15" fill="rgb(237,122,38)"/><text x="17.9593%" y="607.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="17.7093%" y="581" width="0.0324%" height="15" fill="rgb(244,218,35)"/><text x="17.9593%" y="591.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="17.7093%" y="565" width="0.0324%" height="15" fill="rgb(240,68,47)"/><text x="17.9593%" y="575.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="17.7093%" y="549" width="0.0324%" height="15" fill="rgb(210,16,53)"/><text x="17.9593%" y="559.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="17.7093%" y="533" width="0.0324%" height="15" fill="rgb(235,124,12)"/><text x="17.9593%" y="543.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="17.7093%" y="517" width="0.0324%" height="15" fill="rgb(224,169,11)"/><text x="17.9593%" y="527.50"></text></g><g><title>[unknown] (4 samples, 0.03%)</title><rect x="17.7158%" y="501" width="0.0260%" height="15" fill="rgb(250,166,2)"/><text x="17.9658%" y="511.50"></text></g><g><title>[unknown] (4 samples, 0.03%)</title><rect x="17.7158%" y="485" width="0.0260%" height="15" fill="rgb(242,216,29)"/><text x="17.9658%" y="495.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="17.7223%" y="469" width="0.0195%" height="15" fill="rgb(230,116,27)"/><text x="17.9723%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="17.7287%" y="453" width="0.0130%" height="15" fill="rgb(228,99,48)"/><text x="17.9787%" y="463.50"></text></g><g><title>malloc_consolidate (924 samples, 6.00%)</title><rect x="13.3225%" y="613" width="5.9961%" height="15" fill="rgb(253,11,6)"/><text x="13.5725%" y="623.50">malloc_c..</text></g><g><title>unlink_chunk (243 samples, 1.58%)</title><rect x="17.7417%" y="597" width="1.5769%" height="15" fill="rgb(247,143,39)"/><text x="17.9917%" y="607.50"></text></g><g><title>_int_free (1,145 samples, 7.43%)</title><rect x="11.9598%" y="629" width="7.4302%" height="15" fill="rgb(236,97,10)"/><text x="12.2098%" y="639.50">_int_free</text></g><g><title>systrim (11 samples, 0.07%)</title><rect x="19.3186%" y="613" width="0.0714%" height="15" fill="rgb(233,208,19)"/><text x="19.5686%" y="623.50"></text></g><g><title>__GI___default_morecore (11 samples, 0.07%)</title><rect x="19.3186%" y="597" width="0.0714%" height="15" fill="rgb(216,164,2)"/><text x="19.5686%" y="607.50"></text></g><g><title>__GI___sbrk (11 samples, 0.07%)</title><rect x="19.3186%" y="581" width="0.0714%" height="15" fill="rgb(220,129,5)"/><text x="19.5686%" y="591.50"></text></g><g><title>__GI___sbrk (11 samples, 0.07%)</title><rect x="19.3186%" y="565" width="0.0714%" height="15" fill="rgb(242,17,10)"/><text x="19.5686%" y="575.50"></text></g><g><title>__brk (11 samples, 0.07%)</title><rect x="19.3186%" y="549" width="0.0714%" height="15" fill="rgb(242,107,0)"/><text x="19.5686%" y="559.50"></text></g><g><title>[unknown] (11 samples, 0.07%)</title><rect x="19.3186%" y="533" width="0.0714%" height="15" fill="rgb(251,28,31)"/><text x="19.5686%" y="543.50"></text></g><g><title>[unknown] (11 samples, 0.07%)</title><rect x="19.3186%" y="517" width="0.0714%" height="15" fill="rgb(233,223,10)"/><text x="19.5686%" y="527.50"></text></g><g><title>[unknown] (11 samples, 0.07%)</title><rect x="19.3186%" y="501" width="0.0714%" height="15" fill="rgb(215,21,27)"/><text x="19.5686%" y="511.50"></text></g><g><title>[unknown] (11 samples, 0.07%)</title><rect x="19.3186%" y="485" width="0.0714%" height="15" fill="rgb(232,23,21)"/><text x="19.5686%" y="495.50"></text></g><g><title>[unknown] (11 samples, 0.07%)</title><rect x="19.3186%" y="469" width="0.0714%" height="15" fill="rgb(244,5,23)"/><text x="19.5686%" y="479.50"></text></g><g><title>[unknown] (11 samples, 0.07%)</title><rect x="19.3186%" y="453" width="0.0714%" height="15" fill="rgb(226,81,46)"/><text x="19.5686%" y="463.50"></text></g><g><title>[unknown] (9 samples, 0.06%)</title><rect x="19.3316%" y="437" width="0.0584%" height="15" fill="rgb(247,70,30)"/><text x="19.5816%" y="447.50"></text></g><g><title>[unknown] (9 samples, 0.06%)</title><rect x="19.3316%" y="421" width="0.0584%" height="15" fill="rgb(212,68,19)"/><text x="19.5816%" y="431.50"></text></g><g><title>[unknown] (9 samples, 0.06%)</title><rect x="19.3316%" y="405" width="0.0584%" height="15" fill="rgb(240,187,13)"/><text x="19.5816%" y="415.50"></text></g><g><title>[unknown] (4 samples, 0.03%)</title><rect x="19.3640%" y="389" width="0.0260%" height="15" fill="rgb(223,113,26)"/><text x="19.6140%" y="399.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="19.3705%" y="373" width="0.0195%" height="15" fill="rgb(206,192,2)"/><text x="19.6205%" y="383.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="19.3705%" y="357" width="0.0195%" height="15" fill="rgb(241,108,4)"/><text x="19.6205%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (70 samples, 0.45%)</title><rect x="19.3900%" y="629" width="0.4543%" height="15" fill="rgb(247,173,49)"/><text x="19.6400%" y="639.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.02%)</title><rect x="19.8443%" y="629" width="0.0195%" height="15" fill="rgb(224,114,35)"/><text x="20.0943%" y="639.50"></text></g><g><title>map_store::batch_writer::BatchWriter::flush (3 samples, 0.02%)</title><rect x="19.8443%" y="613" width="0.0195%" height="15" fill="rgb(245,159,27)"/><text x="20.0943%" y="623.50"></text></g><g><title>map_store::batch_writer::BatchWriter::flush1 (3 samples, 0.02%)</title><rect x="19.8443%" y="597" width="0.0195%" height="15" fill="rgb(245,172,44)"/><text x="20.0943%" y="607.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (3 samples, 0.02%)</title><rect x="19.8443%" y="581" width="0.0195%" height="15" fill="rgb(236,23,11)"/><text x="20.0943%" y="591.50"></text></g><g><title>std::sys::unix::fs::File::write (3 samples, 0.02%)</title><rect x="19.8443%" y="565" width="0.0195%" height="15" fill="rgb(205,117,38)"/><text x="20.0943%" y="575.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (3 samples, 0.02%)</title><rect x="19.8443%" y="549" width="0.0195%" height="15" fill="rgb(237,72,25)"/><text x="20.0943%" y="559.50"></text></g><g><title>__libc_write (3 samples, 0.02%)</title><rect x="19.8443%" y="533" width="0.0195%" height="15" fill="rgb(244,70,9)"/><text x="20.0943%" y="543.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="19.8443%" y="517" width="0.0195%" height="15" fill="rgb(217,125,39)"/><text x="20.0943%" y="527.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="19.8443%" y="501" width="0.0195%" height="15" fill="rgb(235,36,10)"/><text x="20.0943%" y="511.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="19.8443%" y="485" width="0.0195%" height="15" fill="rgb(251,123,47)"/><text x="20.0943%" y="495.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="19.8443%" y="469" width="0.0195%" height="15" fill="rgb(221,13,13)"/><text x="20.0943%" y="479.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="19.8443%" y="453" width="0.0195%" height="15" fill="rgb(238,131,9)"/><text x="20.0943%" y="463.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="19.8443%" y="437" width="0.0195%" height="15" fill="rgb(211,50,8)"/><text x="20.0943%" y="447.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="19.8443%" y="421" width="0.0195%" height="15" fill="rgb(245,182,24)"/><text x="20.0943%" y="431.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="19.8443%" y="405" width="0.0195%" height="15" fill="rgb(242,14,37)"/><text x="20.0943%" y="415.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="19.8443%" y="389" width="0.0195%" height="15" fill="rgb(246,228,12)"/><text x="20.0943%" y="399.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="19.8443%" y="373" width="0.0195%" height="15" fill="rgb(213,55,15)"/><text x="20.0943%" y="383.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="19.8507%" y="357" width="0.0130%" height="15" fill="rgb(209,9,3)"/><text x="20.1007%" y="367.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="19.8507%" y="341" width="0.0130%" height="15" fill="rgb(230,59,30)"/><text x="20.1007%" y="351.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="19.8507%" y="325" width="0.0130%" height="15" fill="rgb(209,121,21)"/><text x="20.1007%" y="335.50"></text></g><g><title>__memcmp_avx2_movbe (14 samples, 0.09%)</title><rect x="21.1097%" y="613" width="0.0909%" height="15" fill="rgb(220,109,13)"/><text x="21.3597%" y="623.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="21.1875%" y="597" width="0.0130%" height="15" fill="rgb(232,18,1)"/><text x="21.4375%" y="607.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="21.1875%" y="581" width="0.0130%" height="15" fill="rgb(215,41,42)"/><text x="21.4375%" y="591.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="21.1875%" y="565" width="0.0130%" height="15" fill="rgb(224,123,36)"/><text x="21.4375%" y="575.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="21.1875%" y="549" width="0.0130%" height="15" fill="rgb(240,125,3)"/><text x="21.4375%" y="559.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="21.1875%" y="533" width="0.0130%" height="15" fill="rgb(205,98,50)"/><text x="21.4375%" y="543.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="21.1875%" y="517" width="0.0130%" height="15" fill="rgb(205,185,37)"/><text x="21.4375%" y="527.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="21.1875%" y="501" width="0.0130%" height="15" fill="rgb(238,207,15)"/><text x="21.4375%" y="511.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="21.1875%" y="485" width="0.0130%" height="15" fill="rgb(213,199,42)"/><text x="21.4375%" y="495.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (406 samples, 2.63%)</title><rect x="23.2382%" y="597" width="2.6347%" height="15" fill="rgb(235,201,11)"/><text x="23.4882%" y="607.50">&lt;s..</text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="25.8533%" y="581" width="0.0195%" height="15" fill="rgb(207,46,11)"/><text x="26.1033%" y="591.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="25.8533%" y="565" width="0.0195%" height="15" fill="rgb(241,35,35)"/><text x="26.1033%" y="575.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="25.8533%" y="549" width="0.0195%" height="15" fill="rgb(243,32,47)"/><text x="26.1033%" y="559.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="25.8533%" y="533" width="0.0195%" height="15" fill="rgb(247,202,23)"/><text x="26.1033%" y="543.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="25.8533%" y="517" width="0.0195%" height="15" fill="rgb(219,102,11)"/><text x="26.1033%" y="527.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="25.8533%" y="501" width="0.0195%" height="15" fill="rgb(243,110,44)"/><text x="26.1033%" y="511.50"></text></g><g><title>hashbrown::map::make_hash (727 samples, 4.72%)</title><rect x="21.2005%" y="613" width="4.7177%" height="15" fill="rgb(222,74,54)"/><text x="21.4505%" y="623.50">hashb..</text></g><g><title>[unknown] (7 samples, 0.05%)</title><rect x="25.8728%" y="597" width="0.0454%" height="15" fill="rgb(216,99,12)"/><text x="26.1228%" y="607.50"></text></g><g><title>[unknown] (7 samples, 0.05%)</title><rect x="25.8728%" y="581" width="0.0454%" height="15" fill="rgb(226,22,26)"/><text x="26.1228%" y="591.50"></text></g><g><title>[unknown] (7 samples, 0.05%)</title><rect x="25.8728%" y="565" width="0.0454%" height="15" fill="rgb(217,163,10)"/><text x="26.1228%" y="575.50"></text></g><g><title>[unknown] (7 samples, 0.05%)</title><rect x="25.8728%" y="549" width="0.0454%" height="15" fill="rgb(213,25,53)"/><text x="26.1228%" y="559.50"></text></g><g><title>[unknown] (7 samples, 0.05%)</title><rect x="25.8728%" y="533" width="0.0454%" height="15" fill="rgb(252,105,26)"/><text x="26.1228%" y="543.50"></text></g><g><title>[unknown] (7 samples, 0.05%)</title><rect x="25.8728%" y="517" width="0.0454%" height="15" fill="rgb(220,39,43)"/><text x="26.1228%" y="527.50"></text></g><g><title>[unknown] (7 samples, 0.05%)</title><rect x="25.8728%" y="501" width="0.0454%" height="15" fill="rgb(229,68,48)"/><text x="26.1228%" y="511.50"></text></g><g><title>[unknown] (7 samples, 0.05%)</title><rect x="25.8728%" y="485" width="0.0454%" height="15" fill="rgb(252,8,32)"/><text x="26.1228%" y="495.50"></text></g><g><title>[unknown] (6 samples, 0.04%)</title><rect x="25.8793%" y="469" width="0.0389%" height="15" fill="rgb(223,20,43)"/><text x="26.1293%" y="479.50"></text></g><g><title>[unknown] (6 samples, 0.04%)</title><rect x="25.8793%" y="453" width="0.0389%" height="15" fill="rgb(229,81,49)"/><text x="26.1293%" y="463.50"></text></g><g><title>[unknown] (6 samples, 0.04%)</title><rect x="25.8793%" y="437" width="0.0389%" height="15" fill="rgb(236,28,36)"/><text x="26.1293%" y="447.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="25.8858%" y="421" width="0.0324%" height="15" fill="rgb(249,185,26)"/><text x="26.1358%" y="431.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="25.8858%" y="405" width="0.0324%" height="15" fill="rgb(249,174,33)"/><text x="26.1358%" y="415.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="25.8988%" y="389" width="0.0195%" height="15" fill="rgb(233,201,37)"/><text x="26.1488%" y="399.50"></text></g><g><title>[unknown] (4 samples, 0.03%)</title><rect x="27.3005%" y="597" width="0.0260%" height="15" fill="rgb(221,78,26)"/><text x="27.5505%" y="607.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="27.3134%" y="581" width="0.0130%" height="15" fill="rgb(250,127,30)"/><text x="27.5634%" y="591.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="27.3134%" y="565" width="0.0130%" height="15" fill="rgb(230,49,44)"/><text x="27.5634%" y="575.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="27.3134%" y="549" width="0.0130%" height="15" fill="rgb(229,67,23)"/><text x="27.5634%" y="559.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="27.3134%" y="533" width="0.0130%" height="15" fill="rgb(249,83,47)"/><text x="27.5634%" y="543.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="27.3134%" y="517" width="0.0130%" height="15" fill="rgb(215,43,3)"/><text x="27.5634%" y="527.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="27.3134%" y="501" width="0.0130%" height="15" fill="rgb(238,154,13)"/><text x="27.5634%" y="511.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="27.3134%" y="485" width="0.0130%" height="15" fill="rgb(219,56,2)"/><text x="27.5634%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="27.3134%" y="469" width="0.0130%" height="15" fill="rgb(233,0,4)"/><text x="27.5634%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="27.3134%" y="453" width="0.0130%" height="15" fill="rgb(235,30,7)"/><text x="27.5634%" y="463.50"></text></g><g><title>[unknown] (31 samples, 0.20%)</title><rect x="29.3121%" y="581" width="0.2012%" height="15" fill="rgb(250,79,13)"/><text x="29.5621%" y="591.50"></text></g><g><title>[unknown] (29 samples, 0.19%)</title><rect x="29.3251%" y="565" width="0.1882%" height="15" fill="rgb(211,146,34)"/><text x="29.5751%" y="575.50"></text></g><g><title>[unknown] (28 samples, 0.18%)</title><rect x="29.3316%" y="549" width="0.1817%" height="15" fill="rgb(228,22,38)"/><text x="29.5816%" y="559.50"></text></g><g><title>[unknown] (27 samples, 0.18%)</title><rect x="29.3381%" y="533" width="0.1752%" height="15" fill="rgb(235,168,5)"/><text x="29.5881%" y="543.50"></text></g><g><title>[unknown] (26 samples, 0.17%)</title><rect x="29.3446%" y="517" width="0.1687%" height="15" fill="rgb(221,155,16)"/><text x="29.5946%" y="527.50"></text></g><g><title>[unknown] (25 samples, 0.16%)</title><rect x="29.3511%" y="501" width="0.1622%" height="15" fill="rgb(215,215,53)"/><text x="29.6011%" y="511.50"></text></g><g><title>[unknown] (24 samples, 0.16%)</title><rect x="29.3576%" y="485" width="0.1557%" height="15" fill="rgb(223,4,10)"/><text x="29.6076%" y="495.50"></text></g><g><title>[unknown] (22 samples, 0.14%)</title><rect x="29.3705%" y="469" width="0.1428%" height="15" fill="rgb(234,103,6)"/><text x="29.6205%" y="479.50"></text></g><g><title>[unknown] (21 samples, 0.14%)</title><rect x="29.3770%" y="453" width="0.1363%" height="15" fill="rgb(227,97,0)"/><text x="29.6270%" y="463.50"></text></g><g><title>[unknown] (19 samples, 0.12%)</title><rect x="29.3900%" y="437" width="0.1233%" height="15" fill="rgb(234,150,53)"/><text x="29.6400%" y="447.50"></text></g><g><title>_int_malloc (6 samples, 0.04%)</title><rect x="29.5198%" y="565" width="0.0389%" height="15" fill="rgb(228,201,54)"/><text x="29.7698%" y="575.50"></text></g><g><title>sysmalloc (3 samples, 0.02%)</title><rect x="29.5393%" y="549" width="0.0195%" height="15" fill="rgb(222,22,37)"/><text x="29.7893%" y="559.50"></text></g><g><title>__GI___default_morecore (2 samples, 0.01%)</title><rect x="29.5457%" y="533" width="0.0130%" height="15" fill="rgb(237,53,32)"/><text x="29.7957%" y="543.50"></text></g><g><title>__GI___sbrk (2 samples, 0.01%)</title><rect x="29.5457%" y="517" width="0.0130%" height="15" fill="rgb(233,25,53)"/><text x="29.7957%" y="527.50"></text></g><g><title>__GI___sbrk (2 samples, 0.01%)</title><rect x="29.5457%" y="501" width="0.0130%" height="15" fill="rgb(210,40,34)"/><text x="29.7957%" y="511.50"></text></g><g><title>__brk (2 samples, 0.01%)</title><rect x="29.5457%" y="485" width="0.0130%" height="15" fill="rgb(241,220,44)"/><text x="29.7957%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="29.5457%" y="469" width="0.0130%" height="15" fill="rgb(235,28,35)"/><text x="29.7957%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="29.5457%" y="453" width="0.0130%" height="15" fill="rgb(210,56,17)"/><text x="29.7957%" y="463.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="29.5457%" y="437" width="0.0130%" height="15" fill="rgb(224,130,29)"/><text x="29.7957%" y="447.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="29.5457%" y="421" width="0.0130%" height="15" fill="rgb(235,212,8)"/><text x="29.7957%" y="431.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="29.5457%" y="405" width="0.0130%" height="15" fill="rgb(223,33,50)"/><text x="29.7957%" y="415.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.05%)</title><rect x="29.5198%" y="581" width="0.0454%" height="15" fill="rgb(219,149,13)"/><text x="29.7698%" y="591.50"></text></g><g><title>__memset_avx2_unaligned_erms (10 samples, 0.06%)</title><rect x="29.5652%" y="581" width="0.0649%" height="15" fill="rgb(250,156,29)"/><text x="29.8152%" y="591.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="29.6106%" y="565" width="0.0195%" height="15" fill="rgb(216,193,19)"/><text x="29.8606%" y="575.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="29.6106%" y="549" width="0.0195%" height="15" fill="rgb(216,135,14)"/><text x="29.8606%" y="559.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="29.6106%" y="533" width="0.0195%" height="15" fill="rgb(241,47,5)"/><text x="29.8606%" y="543.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="29.6106%" y="517" width="0.0195%" height="15" fill="rgb(233,42,35)"/><text x="29.8606%" y="527.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="29.6106%" y="501" width="0.0195%" height="15" fill="rgb(231,13,6)"/><text x="29.8606%" y="511.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="29.6106%" y="485" width="0.0195%" height="15" fill="rgb(207,181,40)"/><text x="29.8606%" y="495.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="29.6106%" y="469" width="0.0195%" height="15" fill="rgb(254,173,49)"/><text x="29.8606%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="29.6171%" y="453" width="0.0130%" height="15" fill="rgb(221,1,38)"/><text x="29.8671%" y="463.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="29.6171%" y="437" width="0.0130%" height="15" fill="rgb(206,124,46)"/><text x="29.8671%" y="447.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="29.6171%" y="421" width="0.0130%" height="15" fill="rgb(249,21,11)"/><text x="29.8671%" y="431.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2,386 samples, 15.48%)</title><rect x="31.9143%" y="565" width="15.4835%" height="15" fill="rgb(222,201,40)"/><text x="32.1643%" y="575.50">&lt;std::collections::hash:..</text></g><g><title>[unknown] (26 samples, 0.17%)</title><rect x="47.2291%" y="549" width="0.1687%" height="15" fill="rgb(235,61,29)"/><text x="47.4791%" y="559.50"></text></g><g><title>[unknown] (24 samples, 0.16%)</title><rect x="47.2421%" y="533" width="0.1557%" height="15" fill="rgb(219,207,3)"/><text x="47.4921%" y="543.50"></text></g><g><title>[unknown] (24 samples, 0.16%)</title><rect x="47.2421%" y="517" width="0.1557%" height="15" fill="rgb(222,56,46)"/><text x="47.4921%" y="527.50"></text></g><g><title>[unknown] (24 samples, 0.16%)</title><rect x="47.2421%" y="501" width="0.1557%" height="15" fill="rgb(239,76,54)"/><text x="47.4921%" y="511.50"></text></g><g><title>[unknown] (24 samples, 0.16%)</title><rect x="47.2421%" y="485" width="0.1557%" height="15" fill="rgb(231,124,27)"/><text x="47.4921%" y="495.50"></text></g><g><title>[unknown] (23 samples, 0.15%)</title><rect x="47.2485%" y="469" width="0.1493%" height="15" fill="rgb(249,195,6)"/><text x="47.4985%" y="479.50"></text></g><g><title>[unknown] (19 samples, 0.12%)</title><rect x="47.2745%" y="453" width="0.1233%" height="15" fill="rgb(237,174,47)"/><text x="47.5245%" y="463.50"></text></g><g><title>[unknown] (18 samples, 0.12%)</title><rect x="47.2810%" y="437" width="0.1168%" height="15" fill="rgb(206,201,31)"/><text x="47.5310%" y="447.50"></text></g><g><title>[unknown] (14 samples, 0.09%)</title><rect x="47.3069%" y="421" width="0.0909%" height="15" fill="rgb(231,57,52)"/><text x="47.5569%" y="431.50"></text></g><g><title>[unknown] (12 samples, 0.08%)</title><rect x="47.3199%" y="405" width="0.0779%" height="15" fill="rgb(248,177,22)"/><text x="47.5699%" y="415.50"></text></g><g><title>[unknown] (10 samples, 0.06%)</title><rect x="47.3329%" y="389" width="0.0649%" height="15" fill="rgb(215,211,37)"/><text x="47.5829%" y="399.50"></text></g><g><title>[unknown] (8 samples, 0.05%)</title><rect x="47.3459%" y="373" width="0.0519%" height="15" fill="rgb(241,128,51)"/><text x="47.5959%" y="383.50"></text></g><g><title>[unknown] (7 samples, 0.05%)</title><rect x="47.3524%" y="357" width="0.0454%" height="15" fill="rgb(227,165,31)"/><text x="47.6024%" y="367.50"></text></g><g><title>[unknown] (6 samples, 0.04%)</title><rect x="47.3589%" y="341" width="0.0389%" height="15" fill="rgb(228,167,24)"/><text x="47.6089%" y="351.50"></text></g><g><title>[unknown] (4 samples, 0.03%)</title><rect x="47.3718%" y="325" width="0.0260%" height="15" fill="rgb(228,143,12)"/><text x="47.6218%" y="335.50"></text></g><g><title>[unknown] (4 samples, 0.03%)</title><rect x="47.3718%" y="309" width="0.0260%" height="15" fill="rgb(249,149,8)"/><text x="47.6218%" y="319.50"></text></g><g><title>[unknown] (4 samples, 0.03%)</title><rect x="47.3718%" y="293" width="0.0260%" height="15" fill="rgb(243,35,44)"/><text x="47.6218%" y="303.50"></text></g><g><title>[unknown] (4 samples, 0.03%)</title><rect x="47.3718%" y="277" width="0.0260%" height="15" fill="rgb(246,89,9)"/><text x="47.6218%" y="287.50"></text></g><g><title>[unknown] (4 samples, 0.03%)</title><rect x="47.3718%" y="261" width="0.0260%" height="15" fill="rgb(233,213,13)"/><text x="47.6218%" y="271.50"></text></g><g><title>[unknown] (4 samples, 0.03%)</title><rect x="47.3718%" y="245" width="0.0260%" height="15" fill="rgb(233,141,41)"/><text x="47.6218%" y="255.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="47.3783%" y="229" width="0.0195%" height="15" fill="rgb(239,167,4)"/><text x="47.6283%" y="239.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="47.3783%" y="213" width="0.0195%" height="15" fill="rgb(209,217,16)"/><text x="47.6283%" y="223.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="47.3783%" y="197" width="0.0195%" height="15" fill="rgb(219,88,35)"/><text x="47.6283%" y="207.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="47.3848%" y="181" width="0.0130%" height="15" fill="rgb(220,193,23)"/><text x="47.6348%" y="191.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (4,249 samples, 27.57%)</title><rect x="19.8637%" y="629" width="27.5730%" height="15" fill="rgb(230,90,52)"/><text x="20.1137%" y="639.50">hashbrown::map::HashMap&lt;K,V,S&gt;::insert</text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (3,316 samples, 21.52%)</title><rect x="25.9182%" y="613" width="21.5185%" height="15" fill="rgb(252,106,19)"/><text x="26.1682%" y="623.50">hashbrown::raw::RawTable&lt;T&gt;::insert</text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (3,099 samples, 20.11%)</title><rect x="27.3264%" y="597" width="20.1103%" height="15" fill="rgb(206,74,20)"/><text x="27.5764%" y="607.50">hashbrown::raw::RawTable&lt;T&gt;::res..</text></g><g><title>hashbrown::map::make_hash (2,744 samples, 17.81%)</title><rect x="29.6301%" y="581" width="17.8066%" height="15" fill="rgb(230,138,44)"/><text x="29.8801%" y="591.50">hashbrown::map::make_hash</text></g><g><title>[unknown] (6 samples, 0.04%)</title><rect x="47.3978%" y="565" width="0.0389%" height="15" fill="rgb(235,182,43)"/><text x="47.6478%" y="575.50"></text></g><g><title>[unknown] (6 samples, 0.04%)</title><rect x="47.3978%" y="549" width="0.0389%" height="15" fill="rgb(242,16,51)"/><text x="47.6478%" y="559.50"></text></g><g><title>[unknown] (6 samples, 0.04%)</title><rect x="47.3978%" y="533" width="0.0389%" height="15" fill="rgb(248,9,4)"/><text x="47.6478%" y="543.50"></text></g><g><title>[unknown] (6 samples, 0.04%)</title><rect x="47.3978%" y="517" width="0.0389%" height="15" fill="rgb(210,31,22)"/><text x="47.6478%" y="527.50"></text></g><g><title>[unknown] (6 samples, 0.04%)</title><rect x="47.3978%" y="501" width="0.0389%" height="15" fill="rgb(239,54,39)"/><text x="47.6478%" y="511.50"></text></g><g><title>[unknown] (6 samples, 0.04%)</title><rect x="47.3978%" y="485" width="0.0389%" height="15" fill="rgb(230,99,41)"/><text x="47.6478%" y="495.50"></text></g><g><title>[unknown] (6 samples, 0.04%)</title><rect x="47.3978%" y="469" width="0.0389%" height="15" fill="rgb(253,106,12)"/><text x="47.6478%" y="479.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="47.4043%" y="453" width="0.0324%" height="15" fill="rgb(213,46,41)"/><text x="47.6543%" y="463.50"></text></g><g><title>[unknown] (4 samples, 0.03%)</title><rect x="47.4108%" y="437" width="0.0260%" height="15" fill="rgb(215,133,35)"/><text x="47.6608%" y="447.50"></text></g><g><title>[unknown] (4 samples, 0.03%)</title><rect x="47.4108%" y="421" width="0.0260%" height="15" fill="rgb(213,28,5)"/><text x="47.6608%" y="431.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="47.4173%" y="405" width="0.0195%" height="15" fill="rgb(215,77,49)"/><text x="47.6673%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (731 samples, 4.74%)</title><rect x="49.1239%" y="613" width="4.7437%" height="15" fill="rgb(248,100,22)"/><text x="49.3739%" y="623.50">&lt;std::..</text></g><g><title>[unknown] (8 samples, 0.05%)</title><rect x="53.8157%" y="597" width="0.0519%" height="15" fill="rgb(208,67,9)"/><text x="54.0657%" y="607.50"></text></g><g><title>[unknown] (8 samples, 0.05%)</title><rect x="53.8157%" y="581" width="0.0519%" height="15" fill="rgb(219,133,21)"/><text x="54.0657%" y="591.50"></text></g><g><title>[unknown] (8 samples, 0.05%)</title><rect x="53.8157%" y="565" width="0.0519%" height="15" fill="rgb(246,46,29)"/><text x="54.0657%" y="575.50"></text></g><g><title>[unknown] (8 samples, 0.05%)</title><rect x="53.8157%" y="549" width="0.0519%" height="15" fill="rgb(246,185,52)"/><text x="54.0657%" y="559.50"></text></g><g><title>[unknown] (8 samples, 0.05%)</title><rect x="53.8157%" y="533" width="0.0519%" height="15" fill="rgb(252,136,11)"/><text x="54.0657%" y="543.50"></text></g><g><title>[unknown] (8 samples, 0.05%)</title><rect x="53.8157%" y="517" width="0.0519%" height="15" fill="rgb(219,138,53)"/><text x="54.0657%" y="527.50"></text></g><g><title>[unknown] (6 samples, 0.04%)</title><rect x="53.8287%" y="501" width="0.0389%" height="15" fill="rgb(211,51,23)"/><text x="54.0787%" y="511.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="53.8352%" y="485" width="0.0324%" height="15" fill="rgb(247,221,28)"/><text x="54.0852%" y="495.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="53.8352%" y="469" width="0.0324%" height="15" fill="rgb(251,222,45)"/><text x="54.0852%" y="479.50"></text></g><g><title>[unknown] (4 samples, 0.03%)</title><rect x="53.8417%" y="453" width="0.0260%" height="15" fill="rgb(217,162,53)"/><text x="54.0917%" y="463.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="53.8546%" y="437" width="0.0130%" height="15" fill="rgb(229,93,14)"/><text x="54.1046%" y="447.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="53.8546%" y="421" width="0.0130%" height="15" fill="rgb(209,67,49)"/><text x="54.1046%" y="431.50"></text></g><g><title>hashbrown::map::make_hash (995 samples, 6.46%)</title><rect x="47.4367%" y="629" width="6.4568%" height="15" fill="rgb(213,87,29)"/><text x="47.6867%" y="639.50">hashbrow..</text></g><g><title>[unknown] (4 samples, 0.03%)</title><rect x="53.8676%" y="613" width="0.0260%" height="15" fill="rgb(205,151,52)"/><text x="54.1176%" y="623.50"></text></g><g><title>[unknown] (4 samples, 0.03%)</title><rect x="53.8676%" y="597" width="0.0260%" height="15" fill="rgb(253,215,39)"/><text x="54.1176%" y="607.50"></text></g><g><title>[unknown] (4 samples, 0.03%)</title><rect x="53.8676%" y="581" width="0.0260%" height="15" fill="rgb(221,220,41)"/><text x="54.1176%" y="591.50"></text></g><g><title>[unknown] (4 samples, 0.03%)</title><rect x="53.8676%" y="565" width="0.0260%" height="15" fill="rgb(218,133,21)"/><text x="54.1176%" y="575.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="53.8741%" y="549" width="0.0195%" height="15" fill="rgb(221,193,43)"/><text x="54.1241%" y="559.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="53.8806%" y="533" width="0.0130%" height="15" fill="rgb(240,128,52)"/><text x="54.1306%" y="543.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="53.8806%" y="517" width="0.0130%" height="15" fill="rgb(253,114,12)"/><text x="54.1306%" y="527.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="53.8806%" y="501" width="0.0130%" height="15" fill="rgb(215,223,47)"/><text x="54.1306%" y="511.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="53.8806%" y="485" width="0.0130%" height="15" fill="rgb(248,225,23)"/><text x="54.1306%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="53.8806%" y="469" width="0.0130%" height="15" fill="rgb(250,108,0)"/><text x="54.1306%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="53.8806%" y="453" width="0.0130%" height="15" fill="rgb(228,208,7)"/><text x="54.1306%" y="463.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="53.8806%" y="437" width="0.0130%" height="15" fill="rgb(244,45,10)"/><text x="54.1306%" y="447.50"></text></g><g><title>map_store::batch_writer::BatchWriter::new (13 samples, 0.08%)</title><rect x="53.8936%" y="629" width="0.0844%" height="15" fill="rgb(207,125,25)"/><text x="54.1436%" y="639.50"></text></g><g><title>std::fs::OpenOptions::_open (13 samples, 0.08%)</title><rect x="53.8936%" y="613" width="0.0844%" height="15" fill="rgb(210,195,18)"/><text x="54.1436%" y="623.50"></text></g><g><title>std::sys::unix::fs::File::open (13 samples, 0.08%)</title><rect x="53.8936%" y="597" width="0.0844%" height="15" fill="rgb(249,80,12)"/><text x="54.1436%" y="607.50"></text></g><g><title>std::sys::unix::fs::File::open_c (13 samples, 0.08%)</title><rect x="53.8936%" y="581" width="0.0844%" height="15" fill="rgb(221,65,9)"/><text x="54.1436%" y="591.50"></text></g><g><title>std::sys::unix::cvt_r (13 samples, 0.08%)</title><rect x="53.8936%" y="565" width="0.0844%" height="15" fill="rgb(235,49,36)"/><text x="54.1436%" y="575.50"></text></g><g><title>std::sys::unix::fs::File::open_c::{{closure}} (13 samples, 0.08%)</title><rect x="53.8936%" y="549" width="0.0844%" height="15" fill="rgb(225,32,20)"/><text x="54.1436%" y="559.50"></text></g><g><title>__libc_open64 (13 samples, 0.08%)</title><rect x="53.8936%" y="533" width="0.0844%" height="15" fill="rgb(215,141,46)"/><text x="54.1436%" y="543.50"></text></g><g><title>[unknown] (12 samples, 0.08%)</title><rect x="53.9001%" y="517" width="0.0779%" height="15" fill="rgb(250,160,47)"/><text x="54.1501%" y="527.50"></text></g><g><title>[unknown] (12 samples, 0.08%)</title><rect x="53.9001%" y="501" width="0.0779%" height="15" fill="rgb(216,222,40)"/><text x="54.1501%" y="511.50"></text></g><g><title>[unknown] (12 samples, 0.08%)</title><rect x="53.9001%" y="485" width="0.0779%" height="15" fill="rgb(234,217,39)"/><text x="54.1501%" y="495.50"></text></g><g><title>[unknown] (12 samples, 0.08%)</title><rect x="53.9001%" y="469" width="0.0779%" height="15" fill="rgb(207,178,40)"/><text x="54.1501%" y="479.50"></text></g><g><title>[unknown] (12 samples, 0.08%)</title><rect x="53.9001%" y="453" width="0.0779%" height="15" fill="rgb(221,136,13)"/><text x="54.1501%" y="463.50"></text></g><g><title>[unknown] (12 samples, 0.08%)</title><rect x="53.9001%" y="437" width="0.0779%" height="15" fill="rgb(249,199,10)"/><text x="54.1501%" y="447.50"></text></g><g><title>[unknown] (12 samples, 0.08%)</title><rect x="53.9001%" y="421" width="0.0779%" height="15" fill="rgb(249,222,13)"/><text x="54.1501%" y="431.50"></text></g><g><title>[unknown] (12 samples, 0.08%)</title><rect x="53.9001%" y="405" width="0.0779%" height="15" fill="rgb(244,185,38)"/><text x="54.1501%" y="415.50"></text></g><g><title>[unknown] (11 samples, 0.07%)</title><rect x="53.9066%" y="389" width="0.0714%" height="15" fill="rgb(236,202,9)"/><text x="54.1566%" y="399.50"></text></g><g><title>[unknown] (11 samples, 0.07%)</title><rect x="53.9066%" y="373" width="0.0714%" height="15" fill="rgb(250,229,37)"/><text x="54.1566%" y="383.50"></text></g><g><title>[unknown] (11 samples, 0.07%)</title><rect x="53.9066%" y="357" width="0.0714%" height="15" fill="rgb(206,174,23)"/><text x="54.1566%" y="367.50"></text></g><g><title>[unknown] (11 samples, 0.07%)</title><rect x="53.9066%" y="341" width="0.0714%" height="15" fill="rgb(211,33,43)"/><text x="54.1566%" y="351.50"></text></g><g><title>[unknown] (9 samples, 0.06%)</title><rect x="53.9195%" y="325" width="0.0584%" height="15" fill="rgb(245,58,50)"/><text x="54.1695%" y="335.50"></text></g><g><title>[unknown] (6 samples, 0.04%)</title><rect x="53.9390%" y="309" width="0.0389%" height="15" fill="rgb(244,68,36)"/><text x="54.1890%" y="319.50"></text></g><g><title>[unknown] (6 samples, 0.04%)</title><rect x="53.9390%" y="293" width="0.0389%" height="15" fill="rgb(232,229,15)"/><text x="54.1890%" y="303.50"></text></g><g><title>[unknown] (6 samples, 0.04%)</title><rect x="53.9390%" y="277" width="0.0389%" height="15" fill="rgb(254,30,23)"/><text x="54.1890%" y="287.50"></text></g><g><title>[unknown] (6 samples, 0.04%)</title><rect x="53.9390%" y="261" width="0.0389%" height="15" fill="rgb(235,160,14)"/><text x="54.1890%" y="271.50"></text></g><g><title>[unknown] (6 samples, 0.04%)</title><rect x="53.9390%" y="245" width="0.0389%" height="15" fill="rgb(212,155,44)"/><text x="54.1890%" y="255.50"></text></g><g><title>[unknown] (6 samples, 0.04%)</title><rect x="53.9390%" y="229" width="0.0389%" height="15" fill="rgb(226,2,50)"/><text x="54.1890%" y="239.50"></text></g><g><title>[unknown] (6 samples, 0.04%)</title><rect x="53.9390%" y="213" width="0.0389%" height="15" fill="rgb(234,177,6)"/><text x="54.1890%" y="223.50"></text></g><g><title>[unknown] (6 samples, 0.04%)</title><rect x="53.9390%" y="197" width="0.0389%" height="15" fill="rgb(217,24,9)"/><text x="54.1890%" y="207.50"></text></g><g><title>[unknown] (6 samples, 0.04%)</title><rect x="53.9390%" y="181" width="0.0389%" height="15" fill="rgb(220,13,46)"/><text x="54.1890%" y="191.50"></text></g><g><title>[unknown] (6 samples, 0.04%)</title><rect x="53.9390%" y="165" width="0.0389%" height="15" fill="rgb(239,221,27)"/><text x="54.1890%" y="175.50"></text></g><g><title>[unknown] (6 samples, 0.04%)</title><rect x="53.9390%" y="149" width="0.0389%" height="15" fill="rgb(222,198,25)"/><text x="54.1890%" y="159.50"></text></g><g><title>[unknown] (6 samples, 0.04%)</title><rect x="53.9390%" y="133" width="0.0389%" height="15" fill="rgb(211,99,13)"/><text x="54.1890%" y="143.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="54.5814%" y="613" width="0.0130%" height="15" fill="rgb(232,111,31)"/><text x="54.8314%" y="623.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="54.5814%" y="597" width="0.0130%" height="15" fill="rgb(245,82,37)"/><text x="54.8314%" y="607.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="54.5814%" y="581" width="0.0130%" height="15" fill="rgb(227,149,46)"/><text x="54.8314%" y="591.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="54.5814%" y="565" width="0.0130%" height="15" fill="rgb(218,36,50)"/><text x="54.8314%" y="575.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="54.5814%" y="549" width="0.0130%" height="15" fill="rgb(226,80,48)"/><text x="54.8314%" y="559.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="54.5814%" y="533" width="0.0130%" height="15" fill="rgb(238,224,15)"/><text x="54.8314%" y="543.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="54.5814%" y="517" width="0.0130%" height="15" fill="rgb(241,136,10)"/><text x="54.8314%" y="527.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="54.5814%" y="501" width="0.0130%" height="15" fill="rgb(208,32,45)"/><text x="54.8314%" y="511.50"></text></g><g><title>__memcpy_avx_unaligned (142 samples, 0.92%)</title><rect x="54.5944%" y="613" width="0.9215%" height="15" fill="rgb(207,135,9)"/><text x="54.8444%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (8 samples, 0.05%)</title><rect x="55.5159%" y="613" width="0.0519%" height="15" fill="rgb(206,86,44)"/><text x="55.7659%" y="623.50"></text></g><g><title>__libc_write (2,525 samples, 16.39%)</title><rect x="55.6522%" y="549" width="16.3855%" height="15" fill="rgb(245,177,15)"/><text x="55.9022%" y="559.50">__libc_write</text></g><g><title>[unknown] (2,521 samples, 16.36%)</title><rect x="55.6781%" y="533" width="16.3595%" height="15" fill="rgb(206,64,50)"/><text x="55.9281%" y="543.50">[unknown]</text></g><g><title>[unknown] (2,491 samples, 16.16%)</title><rect x="55.8728%" y="517" width="16.1648%" height="15" fill="rgb(234,36,40)"/><text x="56.1228%" y="527.50">[unknown]</text></g><g><title>[unknown] (2,479 samples, 16.09%)</title><rect x="55.9507%" y="501" width="16.0870%" height="15" fill="rgb(213,64,8)"/><text x="56.2007%" y="511.50">[unknown]</text></g><g><title>[unknown] (2,479 samples, 16.09%)</title><rect x="55.9507%" y="485" width="16.0870%" height="15" fill="rgb(210,75,36)"/><text x="56.2007%" y="495.50">[unknown]</text></g><g><title>[unknown] (2,469 samples, 16.02%)</title><rect x="56.0156%" y="469" width="16.0221%" height="15" fill="rgb(229,88,21)"/><text x="56.2656%" y="479.50">[unknown]</text></g><g><title>[unknown] (2,374 samples, 15.41%)</title><rect x="56.6321%" y="453" width="15.4056%" height="15" fill="rgb(252,204,47)"/><text x="56.8821%" y="463.50">[unknown]</text></g><g><title>[unknown] (2,278 samples, 14.78%)</title><rect x="57.2550%" y="437" width="14.7826%" height="15" fill="rgb(208,77,27)"/><text x="57.5050%" y="447.50">[unknown]</text></g><g><title>[unknown] (2,265 samples, 14.70%)</title><rect x="57.3394%" y="421" width="14.6982%" height="15" fill="rgb(221,76,26)"/><text x="57.5894%" y="431.50">[unknown]</text></g><g><title>[unknown] (2,251 samples, 14.61%)</title><rect x="57.4302%" y="405" width="14.6074%" height="15" fill="rgb(225,139,18)"/><text x="57.6802%" y="415.50">[unknown]</text></g><g><title>[unknown] (2,201 samples, 14.28%)</title><rect x="57.7547%" y="389" width="14.2829%" height="15" fill="rgb(230,137,11)"/><text x="58.0047%" y="399.50">[unknown]</text></g><g><title>[unknown] (1,960 samples, 12.72%)</title><rect x="59.3186%" y="373" width="12.7190%" height="15" fill="rgb(212,28,1)"/><text x="59.5686%" y="383.50">[unknown]</text></g><g><title>[unknown] (1,475 samples, 9.57%)</title><rect x="62.4659%" y="357" width="9.5717%" height="15" fill="rgb(248,164,17)"/><text x="62.7159%" y="367.50">[unknown]</text></g><g><title>[unknown] (1,426 samples, 9.25%)</title><rect x="62.7839%" y="341" width="9.2537%" height="15" fill="rgb(222,171,42)"/><text x="63.0339%" y="351.50">[unknown]</text></g><g><title>[unknown] (1,259 samples, 8.17%)</title><rect x="63.8676%" y="325" width="8.1700%" height="15" fill="rgb(243,84,45)"/><text x="64.1176%" y="335.50">[unknown]</text></g><g><title>[unknown] (1,007 samples, 6.53%)</title><rect x="65.5029%" y="309" width="6.5347%" height="15" fill="rgb(252,49,23)"/><text x="65.7529%" y="319.50">[unknown]</text></g><g><title>[unknown] (906 samples, 5.88%)</title><rect x="66.1583%" y="293" width="5.8793%" height="15" fill="rgb(215,19,7)"/><text x="66.4083%" y="303.50">[unknow..</text></g><g><title>[unknown] (730 samples, 4.74%)</title><rect x="67.3005%" y="277" width="4.7372%" height="15" fill="rgb(238,81,41)"/><text x="67.5505%" y="287.50">[unkno..</text></g><g><title>[unknown] (498 samples, 3.23%)</title><rect x="68.8060%" y="261" width="3.2317%" height="15" fill="rgb(210,199,37)"/><text x="69.0560%" y="271.50">[un..</text></g><g><title>[unknown] (260 samples, 1.69%)</title><rect x="70.3504%" y="245" width="1.6872%" height="15" fill="rgb(244,192,49)"/><text x="70.6004%" y="255.50"></text></g><g><title>[unknown] (196 samples, 1.27%)</title><rect x="70.7657%" y="229" width="1.2719%" height="15" fill="rgb(226,211,11)"/><text x="71.0157%" y="239.50"></text></g><g><title>[unknown] (106 samples, 0.69%)</title><rect x="71.3498%" y="213" width="0.6879%" height="15" fill="rgb(236,162,54)"/><text x="71.5998%" y="223.50"></text></g><g><title>[unknown] (70 samples, 0.45%)</title><rect x="71.5834%" y="197" width="0.4543%" height="15" fill="rgb(220,229,9)"/><text x="71.8334%" y="207.50"></text></g><g><title>[unknown] (31 samples, 0.20%)</title><rect x="71.8365%" y="181" width="0.2012%" height="15" fill="rgb(250,87,22)"/><text x="72.0865%" y="191.50"></text></g><g><title>[unknown] (24 samples, 0.16%)</title><rect x="71.8819%" y="165" width="0.1557%" height="15" fill="rgb(239,43,17)"/><text x="72.1319%" y="175.50"></text></g><g><title>[unknown] (15 samples, 0.10%)</title><rect x="71.9403%" y="149" width="0.0973%" height="15" fill="rgb(231,177,25)"/><text x="72.1903%" y="159.50"></text></g><g><title>[unknown] (12 samples, 0.08%)</title><rect x="71.9598%" y="133" width="0.0779%" height="15" fill="rgb(219,179,1)"/><text x="72.2098%" y="143.50"></text></g><g><title>[unknown] (11 samples, 0.07%)</title><rect x="71.9663%" y="117" width="0.0714%" height="15" fill="rgb(238,219,53)"/><text x="72.2163%" y="127.50"></text></g><g><title>[unknown] (9 samples, 0.06%)</title><rect x="71.9792%" y="101" width="0.0584%" height="15" fill="rgb(232,167,36)"/><text x="72.2292%" y="111.50"></text></g><g><title>[unknown] (7 samples, 0.05%)</title><rect x="71.9922%" y="85" width="0.0454%" height="15" fill="rgb(244,19,51)"/><text x="72.2422%" y="95.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="72.0052%" y="69" width="0.0324%" height="15" fill="rgb(224,6,22)"/><text x="72.2552%" y="79.50"></text></g><g><title>[unknown] (4 samples, 0.03%)</title><rect x="72.0117%" y="53" width="0.0260%" height="15" fill="rgb(224,145,5)"/><text x="72.2617%" y="63.50"></text></g><g><title>[unknown] (4 samples, 0.03%)</title><rect x="72.0117%" y="37" width="0.0260%" height="15" fill="rgb(234,130,49)"/><text x="72.2617%" y="47.50"></text></g><g><title>map_store::batch_writer::BatchWriter::write (2,785 samples, 18.07%)</title><rect x="53.9779%" y="629" width="18.0727%" height="15" fill="rgb(254,6,2)"/><text x="54.2279%" y="639.50">map_store::batch_writer::Bat..</text></g><g><title>map_store::batch_writer::BatchWriter::flush1 (2,540 samples, 16.48%)</title><rect x="55.5678%" y="613" width="16.4828%" height="15" fill="rgb(208,96,46)"/><text x="55.8178%" y="623.50">map_store::batch_writer::..</text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (2,529 samples, 16.41%)</title><rect x="55.6392%" y="597" width="16.4114%" height="15" fill="rgb(239,3,39)"/><text x="55.8892%" y="607.50">&lt;std::fs::File as std::io..</text></g><g><title>std::sys::unix::fs::File::write (2,527 samples, 16.40%)</title><rect x="55.6522%" y="581" width="16.3984%" height="15" fill="rgb(233,210,1)"/><text x="55.9022%" y="591.50">std::sys::unix::fs::File:..</text></g><g><title>std::sys::unix::fd::FileDesc::write (2,527 samples, 16.40%)</title><rect x="55.6522%" y="565" width="16.3984%" height="15" fill="rgb(244,137,37)"/><text x="55.9022%" y="575.50">std::sys::unix::fd::FileD..</text></g><g><title>std::sys::unix::cvt (2 samples, 0.01%)</title><rect x="72.0376%" y="549" width="0.0130%" height="15" fill="rgb(240,136,2)"/><text x="72.2876%" y="559.50"></text></g><g><title>&lt;isize as std::sys::unix::IsMinusOne&gt;::is_minus_one (2 samples, 0.01%)</title><rect x="72.0376%" y="533" width="0.0130%" height="15" fill="rgb(239,18,37)"/><text x="72.2876%" y="543.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="72.7709%" y="613" width="0.0130%" height="15" fill="rgb(218,185,22)"/><text x="73.0209%" y="623.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="72.7709%" y="597" width="0.0130%" height="15" fill="rgb(225,218,4)"/><text x="73.0209%" y="607.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="72.7709%" y="581" width="0.0130%" height="15" fill="rgb(230,182,32)"/><text x="73.0209%" y="591.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="72.7709%" y="565" width="0.0130%" height="15" fill="rgb(242,56,43)"/><text x="73.0209%" y="575.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="72.7709%" y="549" width="0.0130%" height="15" fill="rgb(233,99,24)"/><text x="73.0209%" y="559.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="72.7709%" y="533" width="0.0130%" height="15" fill="rgb(234,209,42)"/><text x="73.0209%" y="543.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="72.7709%" y="517" width="0.0130%" height="15" fill="rgb(227,7,12)"/><text x="73.0209%" y="527.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="72.7709%" y="501" width="0.0130%" height="15" fill="rgb(245,203,43)"/><text x="73.0209%" y="511.50"></text></g><g><title>seahash::buffer::hash (362 samples, 2.35%)</title><rect x="72.0506%" y="629" width="2.3491%" height="15" fill="rgb(238,205,33)"/><text x="72.3006%" y="639.50">s..</text></g><g><title>seahash::buffer::State::hash (249 samples, 1.62%)</title><rect x="72.7839%" y="613" width="1.6158%" height="15" fill="rgb(231,56,7)"/><text x="73.0339%" y="623.50"></text></g><g><title>[unknown] (11 samples, 0.07%)</title><rect x="74.3284%" y="597" width="0.0714%" height="15" fill="rgb(244,186,29)"/><text x="74.5784%" y="607.50"></text></g><g><title>[unknown] (11 samples, 0.07%)</title><rect x="74.3284%" y="581" width="0.0714%" height="15" fill="rgb(234,111,31)"/><text x="74.5784%" y="591.50"></text></g><g><title>[unknown] (11 samples, 0.07%)</title><rect x="74.3284%" y="565" width="0.0714%" height="15" fill="rgb(241,149,10)"/><text x="74.5784%" y="575.50"></text></g><g><title>[unknown] (11 samples, 0.07%)</title><rect x="74.3284%" y="549" width="0.0714%" height="15" fill="rgb(249,206,44)"/><text x="74.5784%" y="559.50"></text></g><g><title>[unknown] (11 samples, 0.07%)</title><rect x="74.3284%" y="533" width="0.0714%" height="15" fill="rgb(251,153,30)"/><text x="74.5784%" y="543.50"></text></g><g><title>[unknown] (10 samples, 0.06%)</title><rect x="74.3348%" y="517" width="0.0649%" height="15" fill="rgb(239,152,38)"/><text x="74.5848%" y="527.50"></text></g><g><title>[unknown] (9 samples, 0.06%)</title><rect x="74.3413%" y="501" width="0.0584%" height="15" fill="rgb(249,139,47)"/><text x="74.5913%" y="511.50"></text></g><g><title>[unknown] (9 samples, 0.06%)</title><rect x="74.3413%" y="485" width="0.0584%" height="15" fill="rgb(244,64,35)"/><text x="74.5913%" y="495.50"></text></g><g><title>[unknown] (9 samples, 0.06%)</title><rect x="74.3413%" y="469" width="0.0584%" height="15" fill="rgb(216,46,15)"/><text x="74.5913%" y="479.50"></text></g><g><title>[unknown] (8 samples, 0.05%)</title><rect x="74.3478%" y="453" width="0.0519%" height="15" fill="rgb(250,74,19)"/><text x="74.5978%" y="463.50"></text></g><g><title>[unknown] (8 samples, 0.05%)</title><rect x="74.3478%" y="437" width="0.0519%" height="15" fill="rgb(249,42,33)"/><text x="74.5978%" y="447.50"></text></g><g><title>[unknown] (7 samples, 0.05%)</title><rect x="74.3543%" y="421" width="0.0454%" height="15" fill="rgb(242,149,17)"/><text x="74.6043%" y="431.50"></text></g><g><title>std::sys::unix::fs::File::open_c (12 samples, 0.08%)</title><rect x="74.4127%" y="597" width="0.0779%" height="15" fill="rgb(244,29,21)"/><text x="74.6627%" y="607.50"></text></g><g><title>std::sys::unix::cvt_r (12 samples, 0.08%)</title><rect x="74.4127%" y="581" width="0.0779%" height="15" fill="rgb(220,130,37)"/><text x="74.6627%" y="591.50"></text></g><g><title>std::sys::unix::fs::File::open_c::{{closure}} (12 samples, 0.08%)</title><rect x="74.4127%" y="565" width="0.0779%" height="15" fill="rgb(211,67,2)"/><text x="74.6627%" y="575.50"></text></g><g><title>__libc_open64 (12 samples, 0.08%)</title><rect x="74.4127%" y="549" width="0.0779%" height="15" fill="rgb(235,68,52)"/><text x="74.6627%" y="559.50"></text></g><g><title>[unknown] (12 samples, 0.08%)</title><rect x="74.4127%" y="533" width="0.0779%" height="15" fill="rgb(246,142,3)"/><text x="74.6627%" y="543.50"></text></g><g><title>[unknown] (12 samples, 0.08%)</title><rect x="74.4127%" y="517" width="0.0779%" height="15" fill="rgb(241,25,7)"/><text x="74.6627%" y="527.50"></text></g><g><title>[unknown] (12 samples, 0.08%)</title><rect x="74.4127%" y="501" width="0.0779%" height="15" fill="rgb(242,119,39)"/><text x="74.6627%" y="511.50"></text></g><g><title>[unknown] (12 samples, 0.08%)</title><rect x="74.4127%" y="485" width="0.0779%" height="15" fill="rgb(241,98,45)"/><text x="74.6627%" y="495.50"></text></g><g><title>[unknown] (12 samples, 0.08%)</title><rect x="74.4127%" y="469" width="0.0779%" height="15" fill="rgb(254,28,30)"/><text x="74.6627%" y="479.50"></text></g><g><title>[unknown] (11 samples, 0.07%)</title><rect x="74.4192%" y="453" width="0.0714%" height="15" fill="rgb(241,142,54)"/><text x="74.6692%" y="463.50"></text></g><g><title>[unknown] (11 samples, 0.07%)</title><rect x="74.4192%" y="437" width="0.0714%" height="15" fill="rgb(222,85,15)"/><text x="74.6692%" y="447.50"></text></g><g><title>[unknown] (10 samples, 0.06%)</title><rect x="74.4257%" y="421" width="0.0649%" height="15" fill="rgb(210,85,47)"/><text x="74.6757%" y="431.50"></text></g><g><title>[unknown] (8 samples, 0.05%)</title><rect x="74.4387%" y="405" width="0.0519%" height="15" fill="rgb(224,206,25)"/><text x="74.6887%" y="415.50"></text></g><g><title>[unknown] (7 samples, 0.05%)</title><rect x="74.4452%" y="389" width="0.0454%" height="15" fill="rgb(243,201,19)"/><text x="74.6952%" y="399.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="74.4581%" y="373" width="0.0324%" height="15" fill="rgb(236,59,4)"/><text x="74.7081%" y="383.50"></text></g><g><title>&lt;&amp;[u8] as std::ffi::c_str::CString::new::SpecIntoVec&gt;::into_vec (3 samples, 0.02%)</title><rect x="74.4906%" y="565" width="0.0195%" height="15" fill="rgb(254,179,45)"/><text x="74.7406%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3 samples, 0.02%)</title><rect x="74.4906%" y="549" width="0.0195%" height="15" fill="rgb(226,14,10)"/><text x="74.7406%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.02%)</title><rect x="74.4906%" y="533" width="0.0195%" height="15" fill="rgb(244,27,41)"/><text x="74.7406%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.02%)</title><rect x="74.4906%" y="517" width="0.0195%" height="15" fill="rgb(235,35,32)"/><text x="74.7406%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.02%)</title><rect x="74.4906%" y="501" width="0.0195%" height="15" fill="rgb(218,68,31)"/><text x="74.7406%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (3 samples, 0.02%)</title><rect x="74.4906%" y="485" width="0.0195%" height="15" fill="rgb(207,120,37)"/><text x="74.7406%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.02%)</title><rect x="74.4906%" y="469" width="0.0195%" height="15" fill="rgb(227,98,0)"/><text x="74.7406%" y="479.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.02%)</title><rect x="74.4906%" y="453" width="0.0195%" height="15" fill="rgb(207,7,3)"/><text x="74.7406%" y="463.50"></text></g><g><title>__rdl_alloc (2 samples, 0.01%)</title><rect x="74.4971%" y="437" width="0.0130%" height="15" fill="rgb(206,98,19)"/><text x="74.7471%" y="447.50"></text></g><g><title>std::fs::OpenOptions::_open (16 samples, 0.10%)</title><rect x="74.4127%" y="629" width="0.1038%" height="15" fill="rgb(217,5,26)"/><text x="74.6627%" y="639.50"></text></g><g><title>std::sys::unix::fs::File::open (16 samples, 0.10%)</title><rect x="74.4127%" y="613" width="0.1038%" height="15" fill="rgb(235,190,38)"/><text x="74.6627%" y="623.50"></text></g><g><title>std::sys::unix::fs::cstr (4 samples, 0.03%)</title><rect x="74.4906%" y="597" width="0.0260%" height="15" fill="rgb(247,86,24)"/><text x="74.7406%" y="607.50"></text></g><g><title>std::ffi::c_str::CString::new (4 samples, 0.03%)</title><rect x="74.4906%" y="581" width="0.0260%" height="15" fill="rgb(205,101,16)"/><text x="74.7406%" y="591.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (853 samples, 5.54%)</title><rect x="76.4049%" y="613" width="5.5354%" height="15" fill="rgb(246,168,33)"/><text x="76.6549%" y="623.50">&lt;std::f..</text></g><g><title>std::sys::unix::fs::File::read (853 samples, 5.54%)</title><rect x="76.4049%" y="597" width="5.5354%" height="15" fill="rgb(231,114,1)"/><text x="76.6549%" y="607.50">std::sy..</text></g><g><title>std::sys::unix::fd::FileDesc::read (853 samples, 5.54%)</title><rect x="76.4049%" y="581" width="5.5354%" height="15" fill="rgb(207,184,53)"/><text x="76.6549%" y="591.50">std::sy..</text></g><g><title>__libc_read (852 samples, 5.53%)</title><rect x="76.4114%" y="565" width="5.5289%" height="15" fill="rgb(224,95,51)"/><text x="76.6614%" y="575.50">__libc_..</text></g><g><title>[unknown] (852 samples, 5.53%)</title><rect x="76.4114%" y="549" width="5.5289%" height="15" fill="rgb(212,188,45)"/><text x="76.6614%" y="559.50">[unknow..</text></g><g><title>[unknown] (844 samples, 5.48%)</title><rect x="76.4633%" y="533" width="5.4770%" height="15" fill="rgb(223,154,38)"/><text x="76.7133%" y="543.50">[unknow..</text></g><g><title>[unknown] (840 samples, 5.45%)</title><rect x="76.4893%" y="517" width="5.4510%" height="15" fill="rgb(251,22,52)"/><text x="76.7393%" y="527.50">[unknow..</text></g><g><title>[unknown] (840 samples, 5.45%)</title><rect x="76.4893%" y="501" width="5.4510%" height="15" fill="rgb(229,209,22)"/><text x="76.7393%" y="511.50">[unknow..</text></g><g><title>[unknown] (840 samples, 5.45%)</title><rect x="76.4893%" y="485" width="5.4510%" height="15" fill="rgb(234,138,34)"/><text x="76.7393%" y="495.50">[unknow..</text></g><g><title>[unknown] (831 samples, 5.39%)</title><rect x="76.5477%" y="469" width="5.3926%" height="15" fill="rgb(212,95,11)"/><text x="76.7977%" y="479.50">[unknow..</text></g><g><title>[unknown] (820 samples, 5.32%)</title><rect x="76.6191%" y="453" width="5.3212%" height="15" fill="rgb(240,179,47)"/><text x="76.8691%" y="463.50">[unknow..</text></g><g><title>[unknown] (805 samples, 5.22%)</title><rect x="76.7164%" y="437" width="5.2239%" height="15" fill="rgb(240,163,11)"/><text x="76.9664%" y="447.50">[unkno..</text></g><g><title>[unknown] (799 samples, 5.18%)</title><rect x="76.7554%" y="421" width="5.1849%" height="15" fill="rgb(236,37,12)"/><text x="77.0054%" y="431.50">[unkno..</text></g><g><title>[unknown] (766 samples, 4.97%)</title><rect x="76.9695%" y="405" width="4.9708%" height="15" fill="rgb(232,164,16)"/><text x="77.2195%" y="415.50">[unkno..</text></g><g><title>[unknown] (745 samples, 4.83%)</title><rect x="77.1058%" y="389" width="4.8345%" height="15" fill="rgb(244,205,15)"/><text x="77.3558%" y="399.50">[unkno..</text></g><g><title>[unknown] (354 samples, 2.30%)</title><rect x="79.6431%" y="373" width="2.2972%" height="15" fill="rgb(223,117,47)"/><text x="79.8931%" y="383.50">[..</text></g><g><title>[unknown] (327 samples, 2.12%)</title><rect x="79.8183%" y="357" width="2.1220%" height="15" fill="rgb(244,107,35)"/><text x="80.0683%" y="367.50">[..</text></g><g><title>[unknown] (321 samples, 2.08%)</title><rect x="79.8572%" y="341" width="2.0831%" height="15" fill="rgb(205,140,8)"/><text x="80.1072%" y="351.50">[..</text></g><g><title>[unknown] (314 samples, 2.04%)</title><rect x="79.9027%" y="325" width="2.0376%" height="15" fill="rgb(228,84,46)"/><text x="80.1527%" y="335.50">[..</text></g><g><title>[unknown] (286 samples, 1.86%)</title><rect x="80.0844%" y="309" width="1.8559%" height="15" fill="rgb(254,188,9)"/><text x="80.3344%" y="319.50">[..</text></g><g><title>[unknown] (255 samples, 1.65%)</title><rect x="80.2855%" y="293" width="1.6548%" height="15" fill="rgb(206,112,54)"/><text x="80.5355%" y="303.50"></text></g><g><title>[unknown] (220 samples, 1.43%)</title><rect x="80.5127%" y="277" width="1.4276%" height="15" fill="rgb(216,84,49)"/><text x="80.7627%" y="287.50"></text></g><g><title>[unknown] (37 samples, 0.24%)</title><rect x="81.7002%" y="261" width="0.2401%" height="15" fill="rgb(214,194,35)"/><text x="81.9502%" y="271.50"></text></g><g><title>[unknown] (30 samples, 0.19%)</title><rect x="81.7456%" y="245" width="0.1947%" height="15" fill="rgb(249,28,3)"/><text x="81.9956%" y="255.50"></text></g><g><title>[unknown] (30 samples, 0.19%)</title><rect x="81.7456%" y="229" width="0.1947%" height="15" fill="rgb(222,56,52)"/><text x="81.9956%" y="239.50"></text></g><g><title>[unknown] (26 samples, 0.17%)</title><rect x="81.7716%" y="213" width="0.1687%" height="15" fill="rgb(245,217,50)"/><text x="82.0216%" y="223.50"></text></g><g><title>[unknown] (25 samples, 0.16%)</title><rect x="81.7781%" y="197" width="0.1622%" height="15" fill="rgb(213,201,24)"/><text x="82.0281%" y="207.50"></text></g><g><title>[unknown] (23 samples, 0.15%)</title><rect x="81.7910%" y="181" width="0.1493%" height="15" fill="rgb(248,116,28)"/><text x="82.0410%" y="191.50"></text></g><g><title>[unknown] (23 samples, 0.15%)</title><rect x="81.7910%" y="165" width="0.1493%" height="15" fill="rgb(219,72,43)"/><text x="82.0410%" y="175.50"></text></g><g><title>[unknown] (22 samples, 0.14%)</title><rect x="81.7975%" y="149" width="0.1428%" height="15" fill="rgb(209,138,14)"/><text x="82.0475%" y="159.50"></text></g><g><title>[unknown] (19 samples, 0.12%)</title><rect x="81.8170%" y="133" width="0.1233%" height="15" fill="rgb(222,18,33)"/><text x="82.0670%" y="143.50"></text></g><g><title>[unknown] (13 samples, 0.08%)</title><rect x="81.8559%" y="117" width="0.0844%" height="15" fill="rgb(213,199,7)"/><text x="82.1059%" y="127.50"></text></g><g><title>[unknown] (10 samples, 0.06%)</title><rect x="81.8754%" y="101" width="0.0649%" height="15" fill="rgb(250,110,10)"/><text x="82.1254%" y="111.50"></text></g><g><title>[unknown] (7 samples, 0.05%)</title><rect x="81.8949%" y="85" width="0.0454%" height="15" fill="rgb(248,123,6)"/><text x="82.1449%" y="95.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="81.9079%" y="69" width="0.0324%" height="15" fill="rgb(206,91,31)"/><text x="82.1579%" y="79.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="81.9079%" y="53" width="0.0324%" height="15" fill="rgb(211,154,13)"/><text x="82.1579%" y="63.50"></text></g><g><title>[unknown] (4 samples, 0.03%)</title><rect x="81.9403%" y="613" width="0.0260%" height="15" fill="rgb(225,148,7)"/><text x="82.1903%" y="623.50"></text></g><g><title>[unknown] (4 samples, 0.03%)</title><rect x="81.9403%" y="597" width="0.0260%" height="15" fill="rgb(220,160,43)"/><text x="82.1903%" y="607.50"></text></g><g><title>[unknown] (4 samples, 0.03%)</title><rect x="81.9403%" y="581" width="0.0260%" height="15" fill="rgb(213,52,39)"/><text x="82.1903%" y="591.50"></text></g><g><title>[unknown] (4 samples, 0.03%)</title><rect x="81.9403%" y="565" width="0.0260%" height="15" fill="rgb(243,137,7)"/><text x="82.1903%" y="575.50"></text></g><g><title>[unknown] (4 samples, 0.03%)</title><rect x="81.9403%" y="549" width="0.0260%" height="15" fill="rgb(230,79,13)"/><text x="82.1903%" y="559.50"></text></g><g><title>[unknown] (4 samples, 0.03%)</title><rect x="81.9403%" y="533" width="0.0260%" height="15" fill="rgb(247,105,23)"/><text x="82.1903%" y="543.50"></text></g><g><title>[unknown] (4 samples, 0.03%)</title><rect x="81.9403%" y="517" width="0.0260%" height="15" fill="rgb(223,179,41)"/><text x="82.1903%" y="527.50"></text></g><g><title>[unknown] (4 samples, 0.03%)</title><rect x="81.9403%" y="501" width="0.0260%" height="15" fill="rgb(218,9,34)"/><text x="82.1903%" y="511.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="81.9468%" y="485" width="0.0195%" height="15" fill="rgb(222,106,8)"/><text x="82.1968%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="81.9533%" y="469" width="0.0130%" height="15" fill="rgb(211,220,0)"/><text x="82.2033%" y="479.50"></text></g><g><title>__memcpy_avx_unaligned (865 samples, 5.61%)</title><rect x="81.9663%" y="613" width="5.6132%" height="15" fill="rgb(229,52,16)"/><text x="82.2163%" y="623.50">__memcp..</text></g><g><title>[unknown] (10 samples, 0.06%)</title><rect x="87.5146%" y="597" width="0.0649%" height="15" fill="rgb(212,155,18)"/><text x="87.7646%" y="607.50"></text></g><g><title>[unknown] (10 samples, 0.06%)</title><rect x="87.5146%" y="581" width="0.0649%" height="15" fill="rgb(242,21,14)"/><text x="87.7646%" y="591.50"></text></g><g><title>[unknown] (10 samples, 0.06%)</title><rect x="87.5146%" y="565" width="0.0649%" height="15" fill="rgb(222,19,48)"/><text x="87.7646%" y="575.50"></text></g><g><title>[unknown] (10 samples, 0.06%)</title><rect x="87.5146%" y="549" width="0.0649%" height="15" fill="rgb(232,45,27)"/><text x="87.7646%" y="559.50"></text></g><g><title>[unknown] (9 samples, 0.06%)</title><rect x="87.5211%" y="533" width="0.0584%" height="15" fill="rgb(249,103,42)"/><text x="87.7711%" y="543.50"></text></g><g><title>[unknown] (9 samples, 0.06%)</title><rect x="87.5211%" y="517" width="0.0584%" height="15" fill="rgb(246,81,33)"/><text x="87.7711%" y="527.50"></text></g><g><title>[unknown] (7 samples, 0.05%)</title><rect x="87.5341%" y="501" width="0.0454%" height="15" fill="rgb(252,33,42)"/><text x="87.7841%" y="511.50"></text></g><g><title>[unknown] (7 samples, 0.05%)</title><rect x="87.5341%" y="485" width="0.0454%" height="15" fill="rgb(209,212,41)"/><text x="87.7841%" y="495.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="87.5470%" y="469" width="0.0324%" height="15" fill="rgb(207,154,6)"/><text x="87.7970%" y="479.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="87.5600%" y="453" width="0.0195%" height="15" fill="rgb(223,64,47)"/><text x="87.8100%" y="463.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="87.5600%" y="437" width="0.0195%" height="15" fill="rgb(211,161,38)"/><text x="87.8100%" y="447.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="88.0662%" y="597" width="0.0195%" height="15" fill="rgb(219,138,40)"/><text x="88.3162%" y="607.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="88.0662%" y="581" width="0.0195%" height="15" fill="rgb(241,228,46)"/><text x="88.3162%" y="591.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="88.0662%" y="565" width="0.0195%" height="15" fill="rgb(223,209,38)"/><text x="88.3162%" y="575.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="88.0662%" y="549" width="0.0195%" height="15" fill="rgb(236,164,45)"/><text x="88.3162%" y="559.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="88.0662%" y="533" width="0.0195%" height="15" fill="rgb(231,15,5)"/><text x="88.3162%" y="543.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="88.0662%" y="517" width="0.0195%" height="15" fill="rgb(252,35,15)"/><text x="88.3162%" y="527.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="88.0727%" y="501" width="0.0130%" height="15" fill="rgb(248,181,18)"/><text x="88.3227%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (79 samples, 0.51%)</title><rect x="87.5860%" y="613" width="0.5127%" height="15" fill="rgb(233,39,42)"/><text x="87.8360%" y="623.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="88.0857%" y="597" width="0.0130%" height="15" fill="rgb(238,110,33)"/><text x="88.3357%" y="607.50"></text></g><g><title>std::io::read_until (2,596 samples, 16.85%)</title><rect x="74.5165%" y="629" width="16.8462%" height="15" fill="rgb(233,195,10)"/><text x="74.7665%" y="639.50">std::io::read_until</text></g><g><title>std::sys::unix::memchr::memchr (503 samples, 3.26%)</title><rect x="88.0986%" y="613" width="3.2641%" height="15" fill="rgb(254,105,3)"/><text x="88.3486%" y="623.50">std..</text></g><g><title>__memchr_avx2 (420 samples, 2.73%)</title><rect x="88.6372%" y="597" width="2.7255%" height="15" fill="rgb(221,225,9)"/><text x="88.8872%" y="607.50">__..</text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="91.3498%" y="581" width="0.0130%" height="15" fill="rgb(224,227,45)"/><text x="91.5998%" y="591.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="91.3498%" y="565" width="0.0130%" height="15" fill="rgb(229,198,43)"/><text x="91.5998%" y="575.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="91.3498%" y="549" width="0.0130%" height="15" fill="rgb(206,209,35)"/><text x="91.5998%" y="559.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="91.3498%" y="533" width="0.0130%" height="15" fill="rgb(245,195,53)"/><text x="91.5998%" y="543.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="91.3498%" y="517" width="0.0130%" height="15" fill="rgb(240,92,26)"/><text x="91.5998%" y="527.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="91.3498%" y="501" width="0.0130%" height="15" fill="rgb(207,40,23)"/><text x="91.5998%" y="511.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="91.3498%" y="485" width="0.0130%" height="15" fill="rgb(223,111,35)"/><text x="91.5998%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="91.3498%" y="469" width="0.0130%" height="15" fill="rgb(229,147,28)"/><text x="91.5998%" y="479.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adaptor&lt;T&gt; as core::fmt::Write&gt;::write_str (9 samples, 0.06%)</title><rect x="91.3628%" y="501" width="0.0584%" height="15" fill="rgb(211,29,28)"/><text x="91.6128%" y="511.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (9 samples, 0.06%)</title><rect x="91.3628%" y="485" width="0.0584%" height="15" fill="rgb(228,72,33)"/><text x="91.6128%" y="495.50"></text></g><g><title>&lt;std::io::buffered::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (9 samples, 0.06%)</title><rect x="91.3628%" y="469" width="0.0584%" height="15" fill="rgb(205,214,31)"/><text x="91.6128%" y="479.50"></text></g><g><title>&lt;std::io::buffered::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (9 samples, 0.06%)</title><rect x="91.3628%" y="453" width="0.0584%" height="15" fill="rgb(224,111,15)"/><text x="91.6128%" y="463.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (9 samples, 0.06%)</title><rect x="91.3628%" y="437" width="0.0584%" height="15" fill="rgb(253,21,26)"/><text x="91.6128%" y="447.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write (9 samples, 0.06%)</title><rect x="91.3628%" y="421" width="0.0584%" height="15" fill="rgb(245,139,43)"/><text x="91.6128%" y="431.50"></text></g><g><title>&lt;std::sys::unix::stdio::Stdout as std::io::Write&gt;::write (9 samples, 0.06%)</title><rect x="91.3628%" y="405" width="0.0584%" height="15" fill="rgb(252,170,7)"/><text x="91.6128%" y="415.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (9 samples, 0.06%)</title><rect x="91.3628%" y="389" width="0.0584%" height="15" fill="rgb(231,118,14)"/><text x="91.6128%" y="399.50"></text></g><g><title>__libc_write (9 samples, 0.06%)</title><rect x="91.3628%" y="373" width="0.0584%" height="15" fill="rgb(238,83,0)"/><text x="91.6128%" y="383.50"></text></g><g><title>[unknown] (9 samples, 0.06%)</title><rect x="91.3628%" y="357" width="0.0584%" height="15" fill="rgb(221,39,39)"/><text x="91.6128%" y="367.50"></text></g><g><title>[unknown] (9 samples, 0.06%)</title><rect x="91.3628%" y="341" width="0.0584%" height="15" fill="rgb(222,119,46)"/><text x="91.6128%" y="351.50"></text></g><g><title>[unknown] (9 samples, 0.06%)</title><rect x="91.3628%" y="325" width="0.0584%" height="15" fill="rgb(222,165,49)"/><text x="91.6128%" y="335.50"></text></g><g><title>[unknown] (9 samples, 0.06%)</title><rect x="91.3628%" y="309" width="0.0584%" height="15" fill="rgb(219,113,52)"/><text x="91.6128%" y="319.50"></text></g><g><title>[unknown] (9 samples, 0.06%)</title><rect x="91.3628%" y="293" width="0.0584%" height="15" fill="rgb(214,7,15)"/><text x="91.6128%" y="303.50"></text></g><g><title>[unknown] (8 samples, 0.05%)</title><rect x="91.3692%" y="277" width="0.0519%" height="15" fill="rgb(235,32,4)"/><text x="91.6192%" y="287.50"></text></g><g><title>[unknown] (7 samples, 0.05%)</title><rect x="91.3757%" y="261" width="0.0454%" height="15" fill="rgb(238,90,54)"/><text x="91.6257%" y="271.50"></text></g><g><title>[unknown] (6 samples, 0.04%)</title><rect x="91.3822%" y="245" width="0.0389%" height="15" fill="rgb(213,208,19)"/><text x="91.6322%" y="255.50"></text></g><g><title>[unknown] (4 samples, 0.03%)</title><rect x="91.3952%" y="229" width="0.0260%" height="15" fill="rgb(233,156,4)"/><text x="91.6452%" y="239.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="91.4017%" y="213" width="0.0195%" height="15" fill="rgb(207,194,5)"/><text x="91.6517%" y="223.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="91.4017%" y="197" width="0.0195%" height="15" fill="rgb(206,111,30)"/><text x="91.6517%" y="207.50"></text></g><g><title>std::io::Write::write_fmt (11 samples, 0.07%)</title><rect x="91.3628%" y="533" width="0.0714%" height="15" fill="rgb(243,70,54)"/><text x="91.6128%" y="543.50"></text></g><g><title>core::fmt::write (11 samples, 0.07%)</title><rect x="91.3628%" y="517" width="0.0714%" height="15" fill="rgb(242,28,8)"/><text x="91.6128%" y="527.50"></text></g><g><title>std::io::stdio::_print (12 samples, 0.08%)</title><rect x="91.3628%" y="629" width="0.0779%" height="15" fill="rgb(219,106,18)"/><text x="91.6128%" y="639.50"></text></g><g><title>std::io::stdio::print_to (12 samples, 0.08%)</title><rect x="91.3628%" y="613" width="0.0779%" height="15" fill="rgb(244,222,10)"/><text x="91.6128%" y="623.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (12 samples, 0.08%)</title><rect x="91.3628%" y="597" width="0.0779%" height="15" fill="rgb(236,179,52)"/><text x="91.6128%" y="607.50"></text></g><g><title>std::io::stdio::print_to::{{closure}} (12 samples, 0.08%)</title><rect x="91.3628%" y="581" width="0.0779%" height="15" fill="rgb(213,23,39)"/><text x="91.6128%" y="591.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (12 samples, 0.08%)</title><rect x="91.3628%" y="565" width="0.0779%" height="15" fill="rgb(238,48,10)"/><text x="91.6128%" y="575.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (12 samples, 0.08%)</title><rect x="91.3628%" y="549" width="0.0779%" height="15" fill="rgb(251,196,23)"/><text x="91.6128%" y="559.50"></text></g><g><title>__libc_start_main (15,389 samples, 99.86%)</title><rect x="0.0909%" y="805" width="99.8637%" height="15" fill="rgb(250,152,24)"/><text x="0.3409%" y="815.50">__libc_start_main</text></g><g><title>main (15,389 samples, 99.86%)</title><rect x="0.0909%" y="789" width="99.8637%" height="15" fill="rgb(209,150,17)"/><text x="0.3409%" y="799.50">main</text></g><g><title>std::rt::lang_start_internal (15,389 samples, 99.86%)</title><rect x="0.0909%" y="773" width="99.8637%" height="15" fill="rgb(234,202,34)"/><text x="0.3409%" y="783.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (15,389 samples, 99.86%)</title><rect x="0.0909%" y="757" width="99.8637%" height="15" fill="rgb(253,148,53)"/><text x="0.3409%" y="767.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (15,389 samples, 99.86%)</title><rect x="0.0909%" y="741" width="99.8637%" height="15" fill="rgb(218,129,16)"/><text x="0.3409%" y="751.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (15,389 samples, 99.86%)</title><rect x="0.0909%" y="725" width="99.8637%" height="15" fill="rgb(216,85,19)"/><text x="0.3409%" y="735.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (15,389 samples, 99.86%)</title><rect x="0.0909%" y="709" width="99.8637%" height="15" fill="rgb(235,228,7)"/><text x="0.3409%" y="719.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::_{{closure}} (15,389 samples, 99.86%)</title><rect x="0.0909%" y="693" width="99.8637%" height="15" fill="rgb(245,175,0)"/><text x="0.3409%" y="703.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (15,389 samples, 99.86%)</title><rect x="0.0909%" y="677" width="99.8637%" height="15" fill="rgb(208,168,36)"/><text x="0.3409%" y="687.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>map_reduce::main (15,389 samples, 99.86%)</title><rect x="0.0909%" y="661" width="99.8637%" height="15" fill="rgb(246,171,24)"/><text x="0.3409%" y="671.50">map_reduce::main</text></g><g><title>&lt;topkstr::map_reduce::MapReduce as topkstr::Solution&gt;::solve (15,389 samples, 99.86%)</title><rect x="0.0909%" y="645" width="99.8637%" height="15" fill="rgb(215,142,24)"/><text x="0.3409%" y="655.50">&lt;topkstr::map_reduce::MapReduce as topkstr::Solution&gt;::solve</text></g><g><title>topkstr::mink_set::MinkSet&lt;T&gt;::insert (1,312 samples, 8.51%)</title><rect x="91.4406%" y="629" width="8.5140%" height="15" fill="rgb(250,187,7)"/><text x="91.6906%" y="639.50">topkstr::min..</text></g><g><title>__memcmp_avx2_movbe (1,247 samples, 8.09%)</title><rect x="91.8624%" y="613" width="8.0921%" height="15" fill="rgb(228,66,33)"/><text x="92.1124%" y="623.50">__memcmp_av..</text></g><g><title>[unknown] (10 samples, 0.06%)</title><rect x="99.8897%" y="597" width="0.0649%" height="15" fill="rgb(234,215,21)"/><text x="100.1397%" y="607.50"></text></g><g><title>[unknown] (10 samples, 0.06%)</title><rect x="99.8897%" y="581" width="0.0649%" height="15" fill="rgb(222,191,20)"/><text x="100.1397%" y="591.50"></text></g><g><title>[unknown] (10 samples, 0.06%)</title><rect x="99.8897%" y="565" width="0.0649%" height="15" fill="rgb(245,79,54)"/><text x="100.1397%" y="575.50"></text></g><g><title>[unknown] (9 samples, 0.06%)</title><rect x="99.8962%" y="549" width="0.0584%" height="15" fill="rgb(240,10,37)"/><text x="100.1462%" y="559.50"></text></g><g><title>[unknown] (9 samples, 0.06%)</title><rect x="99.8962%" y="533" width="0.0584%" height="15" fill="rgb(214,192,32)"/><text x="100.1462%" y="543.50"></text></g><g><title>[unknown] (9 samples, 0.06%)</title><rect x="99.8962%" y="517" width="0.0584%" height="15" fill="rgb(209,36,54)"/><text x="100.1462%" y="527.50"></text></g><g><title>[unknown] (8 samples, 0.05%)</title><rect x="99.9027%" y="501" width="0.0519%" height="15" fill="rgb(220,10,11)"/><text x="100.1527%" y="511.50"></text></g><g><title>[unknown] (6 samples, 0.04%)</title><rect x="99.9156%" y="485" width="0.0389%" height="15" fill="rgb(221,106,17)"/><text x="100.1656%" y="495.50"></text></g><g><title>[unknown] (6 samples, 0.04%)</title><rect x="99.9156%" y="469" width="0.0389%" height="15" fill="rgb(251,142,44)"/><text x="100.1656%" y="479.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="99.9221%" y="453" width="0.0324%" height="15" fill="rgb(238,13,15)"/><text x="100.1721%" y="463.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="99.9416%" y="437" width="0.0130%" height="15" fill="rgb(208,107,27)"/><text x="100.1916%" y="447.50"></text></g><g><title>map-reduce (15,404 samples, 99.96%)</title><rect x="0.0000%" y="837" width="99.9611%" height="15" fill="rgb(205,136,37)"/><text x="0.2500%" y="847.50">map-reduce</text></g><g><title>_start (15,390 samples, 99.87%)</title><rect x="0.0909%" y="821" width="99.8702%" height="15" fill="rgb(250,205,27)"/><text x="0.3409%" y="831.50">_start</text></g><g><title>all (15,410 samples, 100%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(210,80,43)"/><text x="0.2500%" y="863.50"></text></g><g><title>perf (6 samples, 0.04%)</title><rect x="99.9611%" y="837" width="0.0389%" height="15" fill="rgb(247,160,36)"/><text x="100.2111%" y="847.50"></text></g><g><title>[unknown] (6 samples, 0.04%)</title><rect x="99.9611%" y="821" width="0.0389%" height="15" fill="rgb(234,13,49)"/><text x="100.2111%" y="831.50"></text></g><g><title>[unknown] (6 samples, 0.04%)</title><rect x="99.9611%" y="805" width="0.0389%" height="15" fill="rgb(234,122,0)"/><text x="100.2111%" y="815.50"></text></g><g><title>[unknown] (6 samples, 0.04%)</title><rect x="99.9611%" y="789" width="0.0389%" height="15" fill="rgb(207,146,38)"/><text x="100.2111%" y="799.50"></text></g><g><title>[unknown] (6 samples, 0.04%)</title><rect x="99.9611%" y="773" width="0.0389%" height="15" fill="rgb(207,177,25)"/><text x="100.2111%" y="783.50"></text></g><g><title>[unknown] (6 samples, 0.04%)</title><rect x="99.9611%" y="757" width="0.0389%" height="15" fill="rgb(211,178,42)"/><text x="100.2111%" y="767.50"></text></g><g><title>[unknown] (6 samples, 0.04%)</title><rect x="99.9611%" y="741" width="0.0389%" height="15" fill="rgb(230,69,54)"/><text x="100.2111%" y="751.50"></text></g><g><title>[unknown] (6 samples, 0.04%)</title><rect x="99.9611%" y="725" width="0.0389%" height="15" fill="rgb(214,135,41)"/><text x="100.2111%" y="735.50"></text></g><g><title>[unknown] (6 samples, 0.04%)</title><rect x="99.9611%" y="709" width="0.0389%" height="15" fill="rgb(237,67,25)"/><text x="100.2111%" y="719.50"></text></g><g><title>[unknown] (6 samples, 0.04%)</title><rect x="99.9611%" y="693" width="0.0389%" height="15" fill="rgb(222,189,50)"/><text x="100.2111%" y="703.50"></text></g></svg></svg>